{"version":3,"file":"static/js/main.e5b96566.js","mappings":"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","sources":["src/utils/text/capitalizeString.ts","src/utils/text/cleanString.ts","src/utils/text/formatDistanceNumber.ts","src/constants.ts","src/utils/enrichCatalogue.ts","src/utils/enrichStore.ts","src/utils/supabaseClient.ts","src/api/supabase.ts","src/api/fakeApi.ts","src/api/nominatim.ts","src/api/photon.ts","src/api/ipapi.ts","src/utils/firebase/createScreenName.ts","src/utils/firebase/firebaseApp.web.ts","src/utils/firebase/analytics.web.ts","src/utils/getLocation.ts","src/utils/storage.ts","src/utils/theme.ts","src/utils/useBottomSheetBackHandler.ts","src/utils/useBreakpoint.ts","src/utils/useBreakpointsValue.ts","src/utils/useStyles.ts","src/redux/appSlice.ts","src/redux/consentSlice.web.ts","src/redux/uiSlice.ts","src/redux/userSlice.ts","src/redux/store.ts","src/navigation/NavigationProvider.tsx","src/components/HeaderTab.web.tsx","src/components/MainDrawer.tsx","src/components/RetailerDistance.tsx","src/components/StoreOpening.tsx","src/components/StoreCard/StoreCard.tsx","src/components/StoreCard/StoreCardPlaceholder.tsx","src/components/StoresList/StoresListItem.tsx","src/components/Ads/CataloguesListAd.web.tsx","src/components/Ads/StoresListAd.web.tsx","src/components/Ads/StoreDetailAd.web.tsx","src/components/StoresList/StoresList.tsx","src/components/BottomSheets/CatalogueDetailSheet.tsx","src/components/BottomSheets/BottomSheet.tsx","src/components/CatalogueStoreDialog.tsx","src/components/ErrorFallback.tsx","src/components/Header.tsx","src/screens/CatalogueDetailScreen.web.tsx","src/components/CatalogueExpiration.tsx","src/components/CatalogueCard/CatalogueCard.tsx","src/components/CatalogueCard/CatalogueCardPlaceholder.tsx","src/components/CataloguesGrid/CataloguesGridPlaceholder.tsx","src/components/HeadPreloadImg.tsx","src/components/CataloguesList/CataloguesListItem.tsx","src/components/CataloguesList/CataloguesList.tsx","src/components/CataloguesGrid/CataloguesGrid.tsx","src/components/RetailersFilter/RetailersFilterItem.tsx","src/components/RetailersFilter/RetailersFilter.tsx","src/components/FiltersModal.tsx","src/components/Geo/GeoAction.tsx","src/components/Geo/GeoSearchInput.tsx","src/components/Geo/GeoSearchItem.tsx","src/components/Geo/GeoSearch.tsx","src/components/Geo/GeoLocationButton.tsx","src/screens/CataloguesScreen.tsx","src/components/EmptyFavList.tsx","src/screens/ForYouScreen.tsx","src/screens/GeoScreen.tsx","src/screens/NotFoundScreen.tsx","src/screens/OnboardingScreen.web.tsx","src/components/OpeningHours.tsx","src/components/StoresMap/StoreStaticMap.web.tsx","src/screens/StoreDetailScreen.tsx","src/components/StoresMap/StoresMap.web.tsx","src/screens/StoresScreen.tsx","src/screens/ContactsScreen.web.tsx","src/screens/PrivacyPolicyScreen.web.tsx","src/navigation/HomeTabs.tsx","src/navigation/RootStack.tsx","src/AppContainer.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const capitalizeString = (inputString: string) => {\n  const words = inputString.split(' ')\n  const result = words.map((word) => {\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n  })\n  const outputString = result.join(' ')\n  return outputString\n}\n\nexport default capitalizeString\n","// remove new lines, then remove extra spaces and trim\nexport const cleanString = (string: string) =>\n  string.replace('/\\r?\\n|\\r/g', '').replace(/\\s+/g, ' ').trim()\n\nexport default cleanString\n","export const formatDistanceNumber = (distance: number) => {\n  return distance.toString().length > 3 ? `${Math.round(distance / 100) / 10} Km` : `${distance} m`\n}\n\nexport default formatDistanceNumber\n","import type { CountryCode } from './navigation/types'\nimport type { BpValues } from './utils/types'\n\nexport const Blurhash = 'LKN]Rv%2Tw=w]~RBVZRi};RPxuwH'\n\nexport const TransitionTiming = 300\n\nexport const SpacingBase = 8\n\nexport const BottomSheetHandleHeight = SpacingBase * 3\n\nexport const Breakpoints: { name: keyof BpValues; value: number }[] = [\n  { name: 'xs', value: 0 },\n  { name: 'sm', value: 576 },\n  { name: 'md', value: 768 },\n  { name: 'lg', value: 992 },\n  { name: 'xl', value: 1200 },\n  { name: 'xxl', value: 1400 },\n]\n\nexport const Routes: Record<CountryCode, Record<string, string>> = {\n  it: {\n    Stores: 'negozi',\n    StoreDetail: 'negozi',\n    ForYou: 'per-te',\n    CatalogueDetail: 'volantini',\n    Geo: 'posizione',\n    Contacts: 'contatti',\n  },\n  fr: {},\n}\n\n/* eslint-disable camelcase */\nexport const Copies = {\n  add_to_favoutites: 'Aggiungi ai tuoi preferiti',\n  apply: 'Applica',\n  by_distance: 'Per distanza',\n  by_retailer: 'Per catena',\n  cannot_geolocalize: 'Così non riusciamo a trovarti!',\n  cannot_geolocalize_try_again: 'Non siamo riusciti a localizzarti, prova di nuovo!',\n  catalogue: 'Volantino',\n  catalogues: 'Volantini',\n  catalogues_near_you: 'I Volantini attorno a te',\n  change_location: 'Cambia la tua posizione',\n  close: 'Chiudi',\n  closed: 'Chiuso',\n  consent_form: 'Preferenze di consenso',\n  contacts: 'Contatti',\n  delete: 'Cancella',\n  download_app_to_see_catalogue_1: 'Per sfogliare il volantino',\n  download_app_to_see_catalogue_2: \"Scarica l'app su Google Play\",\n  empty_favourites_catalogues: 'Non hai ancora salvato i tuoi volantini preferiti!',\n  empty_favourites_button_catalogues: 'Apri un volantino e usa la stella',\n  empty_favourites_stores: 'Non hai ancora salvato i tuoi negozi preferiti!',\n  empty_favourites_button_stores: 'Guarda i negozi attorno a te',\n  ends_on: 'Scade il',\n  ends_in: 'Scade tra',\n  ends_in_short: 'Tra',\n  expired: 'Scaduto',\n  expires_today: 'Scade oggi',\n  favourites: 'Preferiti',\n  filter: 'Filtra',\n  filter_offers: 'Filtra le offerte',\n  filter_stores: 'Filtra i negozi',\n  for_you: 'Per te',\n  generic_error_text:\n    \"Ci dispiace, ma si è verificato un errore imprevisto dell'app. Faremo il nostro meglio per correggerlo!\",\n  give_geolocation_permission:\n    \"Apri le impostazioni dell'app e attiva i permessi per farci conoscere la tua posizione\",\n  give_geolocation_permission_web:\n    'Attiva i permessi sul tuo browser per farci conoscere la tua posizione',\n  go_to_settings: 'Vai alle impostazioni',\n  improve_location_to_show_stores:\n    \"Inserisci l'indirizzo giusto e potremo mostrarti negozi e offerte nelle vicinanze!\",\n  is_not_your_position: 'Non è la tua zona?',\n  list: 'Lista',\n  map: 'Mappa',\n  no_offers_for_store_title: 'Attualmente non ci sono offerte\\nin questo negozio',\n  no_offers_for_store_subtitle:\n    'Usa la stella per aggiungere il negozio ai preferiti e ritrovarlo più facilmente in un altro momento!',\n  onboarding_1_title: 'Benvenuto su',\n  onboarding_1_title_highlight: 'Milloo.Me',\n  onboarding_1_description:\n    'Io sono Milloo e ti aiuterò nella tua esperienza di shopping mostrando volantini, offerte personalizzate e promozioni intorno a te: un servizio unico e gratuito orientato ai tuoi desideri.',\n  onboarding_2_title: 'Sarai sempre',\n  onboarding_2_title_highlight: 'al primo posto',\n  onboarding_2_description:\n    'A differenza di altri io non guadagno nulla dai negozi. Per poterti garantire il migliore servizio e offrirti contenuti su misura ti chiederò il consenso per mostrarti pubblicità personalizzate.',\n  onboarding_3_title: 'Accedere a offerte',\n  onboarding_3_title_highlight: 'personalizzate intorno a te?',\n  onboarding_3_description:\n    'Milloo è pronto ad aiutarti, abilita la posizione per scoprire sconti, promozioni e offerte dei negozi più vicini!',\n  open: 'Aperto',\n  open_milloome: 'Apri Milloo.Me',\n  open_store_detail: 'Orari e offerte del negozio',\n  opening_hours: 'Orari di apertura',\n  or: 'Oppure',\n  ordered_by_distance: 'Ordinati per distanza',\n  read_catalogue: 'Leggi il volantino',\n  remove: 'Rimuovi',\n  remove_from_favourites: 'Rimuovi dai preferiti',\n  force_removed_from_favourites_store:\n    'Il tuo negozio preferito è stato eliminato. Ci scusiamo per il disagio!',\n  force_removed_from_favourites_catalogue:\n    'Il tuo volantino preferito è scaduto ed è stato rimosso',\n  reset_filters: 'Elimina filtri',\n  retailer: 'Catena',\n  retailers: 'Catene',\n  retry: 'Riprova',\n  route: 'Percorso',\n  settings: 'Impostazioni',\n  search: 'Cerca',\n  search_city_or_address: 'Cerca una città o un indirizzo',\n  search_stores_in_this_area: 'Cerca negozi in questa zona',\n  something_went_wrong: 'Qualcosa è andato storto!',\n  starts_in: 'Inizia tra',\n  store: 'Negozio',\n  stores: 'Negozi',\n  stores_and_settings: 'Negozi e impostazioni',\n  stores_near_you: 'I Negozi attorno a te',\n  swipe_horizontally: 'Sfoglia in orizzontale',\n  swipe_vertically: 'Sfoglia in verticale',\n  toggle_theme: 'Cambia Tema',\n  use_your_location: 'Usa la tua posizione',\n  you_are_here: 'Sei qui',\n  your_favourites_catalogues: 'I tuoi volantini preferiti',\n  your_favourites_stores: 'I tuoi negozi preferiti',\n  your_location: 'La tua posizione',\n  getPageOf: (a: string, b: string) => `Pagina ${a} di ${b}`,\n}\n/* eslint-enable */\n\nexport const DefaultLocations = {\n  it: {\n    latitude: 41.91164,\n    longitude: 12.51423,\n    display: 'Roma',\n    boundingBox: '6.7499552751,36.619987291,18.4802470232,47.1153931748',\n  },\n  fr: {\n    latitude: 48.864716,\n    longitude: 2.349014,\n    display: 'Paris',\n    boundingBox: '-54.5247541978, 2.05338918702, 9.56001631027, 51.1485061713',\n  },\n}\n\nexport const ExtraColors = {\n  forestgreen: 'forestgreen',\n  orange: 'orange',\n  crimson: 'crimson',\n  gray: 'gray',\n  gold: 'gold',\n  pink: '#FF999A',\n}\n\nexport const GMapStyle = [\n  {\n    stylers: [\n      {\n        visibility: 'simplified',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.business',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.medical',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi.park',\n    elementType: 'labels.text',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'transit',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n]\n\nexport const FiltersDefault = {\n  distance: parseInt(process.env.EXPO_PUBLIC_DISTANCE_QUERY ?? '30000', 10),\n  retailer_ids: [],\n}\n","/* eslint-disable camelcase */\nimport {\n  parse,\n  format,\n  formatDistanceToNowStrict,\n  differenceInDays,\n  addMinutes,\n  addSeconds,\n  addHours,\n} from 'date-fns'\n// TODO: handle country-based locales\nimport { it } from 'date-fns/locale'\n\nimport { capitalizeString, cleanString, formatDistanceNumber } from './text'\nimport type { Catalogue, QueriedCatalogue, expirationUrgencyLevel } from '../api/types'\nimport { Copies } from '../constants'\n\nconst getDateInfo = (unformatted_date_start: string, unformatted_date_end: string) => {\n  const { ends_on, ends_in, expired, expires_today, starts_in } = Copies\n\n  const today = new Date()\n\n  const date_start = parse(unformatted_date_start, 'yyyy-MM-dd', new Date())\n  let date_end = parse(unformatted_date_end, 'yyyy-MM-dd', new Date())\n\n  // Example: 2023-12-26 means the date_end includes 2023-12-26\n  date_end = addHours(date_end, 23)\n  date_end = addMinutes(date_end, 59)\n  date_end = addSeconds(date_end, 59)\n\n  const daysDiffFromStart = differenceInDays(date_start, today)\n  const distanceFromStart = formatDistanceToNowStrict(date_start, { locale: it })\n\n  const daysDiffFromEnd = differenceInDays(date_end, today)\n  const distanceFromEnd = formatDistanceToNowStrict(date_end, { locale: it })\n\n  let dateInfo: {\n    _expiration_label: Catalogue['_expiration_label']\n    _expiration_urgency_level: Catalogue['_expiration_urgency_level']\n  }\n\n  if (daysDiffFromEnd < 0) {\n    dateInfo = { _expiration_label: expired, _expiration_urgency_level: 100 }\n  } else if (daysDiffFromEnd === 0) {\n    dateInfo = { _expiration_label: expires_today, _expiration_urgency_level: 2 }\n  } else if (daysDiffFromEnd < 3) {\n    dateInfo = { _expiration_label: `${ends_in} ${distanceFromEnd}`, _expiration_urgency_level: 2 }\n  } else if (daysDiffFromEnd <= 10) {\n    dateInfo = { _expiration_label: `${ends_in} ${distanceFromEnd}`, _expiration_urgency_level: 1 }\n  } else {\n    dateInfo = {\n      _expiration_label: `${ends_on} ${format(date_end, 'dd/MM', { locale: it })}`,\n      _expiration_urgency_level: 0,\n    }\n  }\n\n  if (daysDiffFromStart > 0) {\n    dateInfo = {\n      _expiration_label: `${starts_in} ${distanceFromStart}`,\n      _expiration_urgency_level: -1,\n    }\n  }\n\n  return dateInfo\n}\n\nexport const enrichCatalogue = (c: QueriedCatalogue): Catalogue => {\n  let expirationLabel = c.date_end ?? ''\n  let urgencyLevel: expirationUrgencyLevel = 0\n\n  if (c.date_start && c.date_end) {\n    const { _expiration_label, _expiration_urgency_level } = getDateInfo(c.date_start, c.date_end)\n    expirationLabel = _expiration_label\n    urgencyLevel = _expiration_urgency_level\n  }\n\n  return {\n    ...c,\n    title: c.title ? capitalizeString(cleanString(c.title)) : c.title,\n    _retailer_name:\n      c.retailers.length > 0 && c.retailers[0].name ? capitalizeString(c.retailers[0].name) : '',\n    _retailer_id: c.retailers.length > 0 && c.retailers[0].id ? c.retailers[0].id : '',\n    _retailer_slug: c.retailers.length > 0 && c.retailers[0].slug ? c.retailers[0].slug : '',\n    _distance: c.dist_meters && c.dist_meters >= 0 ? formatDistanceNumber(c.dist_meters) : '',\n    _expiration_label: expirationLabel,\n    _expiration_urgency_level: urgencyLevel,\n  }\n}\n\nexport default enrichCatalogue\n","/* eslint-disable camelcase */\nimport { format, getISODay } from 'date-fns'\n// TODO: handle country-based locales\nimport { it } from 'date-fns/locale'\n\nimport enrichCatalogue from './enrichCatalogue'\nimport { capitalizeString, formatDistanceNumber } from './text'\nimport type { QueriedStore, Store } from '../api/types'\n\nconst formatPeriods = (\n  input: {\n    open?: { day: number; time: string }\n    close?: { day: number; time: string }\n  }[],\n): Store['opening_hours'] => {\n  const today = getISODay(new Date())\n  const currentTime = format(new Date(), 'HH:mm')\n\n  const output = input\n    .map((entry) => {\n      if (!entry.close || !entry.open) {\n        return undefined\n      }\n      const { close, open } = entry\n      const currentDate = new Date()\n      const dayName = format(\n        new Date(\n          currentDate.getFullYear(),\n          currentDate.getMonth(),\n          currentDate.getDate() + (open.day - currentDate.getDay()),\n        ),\n        'EEEE',\n        { locale: it },\n      )\n      const timeFrom = format(\n        new Date(\n          currentDate.getFullYear(),\n          currentDate.getMonth(),\n          currentDate.getDate(),\n          parseInt(open.time.slice(0, 2), 10),\n          parseInt(open.time.slice(2), 10),\n        ),\n        'HH:mm',\n      )\n      const timeTo = format(\n        new Date(\n          currentDate.getFullYear(),\n          currentDate.getMonth(),\n          currentDate.getDate(),\n          parseInt(close.time.slice(0, 2), 10),\n          parseInt(close.time.slice(2), 10),\n        ),\n        'HH:mm',\n      )\n\n      // TODO: remove the 0/7 check when we align to standard iso\n      const isToday = open.day === today || (open.day === 0 && today === 7)\n\n      let isOpen: boolean\n      if (close.day > open.day || (close.day === open.day && close.time >= open.time)) {\n        // Normal case: close.day is the same or greater than open.day\n        isOpen = isToday && currentTime >= timeFrom && currentTime <= timeTo\n      } else {\n        // Special case: close.time is on the next day\n        isOpen = isToday && (currentTime >= timeFrom || currentTime <= timeTo)\n      }\n\n      return {\n        dayNumber: open.day,\n        day: dayName,\n        time: [{ from: timeFrom, to: timeTo }],\n        isToday,\n        isOpen,\n      }\n    })\n\n    .reduce<Store['opening_hours']>((acc, entry) => {\n      if (!entry) {\n        return acc\n      }\n\n      const existingDayEntry = acc.find((item) => item.day === entry.day)\n\n      if (existingDayEntry) {\n        existingDayEntry.time.push(...entry.time)\n      } else {\n        acc.push(entry)\n      }\n\n      return acc\n    }, [])\n    .sort((a, b) => {\n      // TODO: remove the 0 check when we align to standard iso\n      if (a.dayNumber === 0) {\n        return 1\n      }\n      if (b.dayNumber === 0) {\n        return -1\n      }\n      return a.dayNumber - b.dayNumber\n    })\n\n  return output\n}\n\nconst formatOpeningHours = (\n  opening_hours: QueriedStore['opening_hours'],\n): Store['opening_hours'] => {\n  if (\n    !opening_hours ||\n    typeof opening_hours !== 'object' ||\n    Array.isArray(opening_hours) ||\n    !opening_hours.periods ||\n    !Array.isArray(opening_hours.periods)\n  ) {\n    return []\n  }\n  // TODO\n  // @ts-expect-error: spaghetty\n  return formatPeriods(opening_hours.periods)\n}\n\nexport const enrichStore = (s: QueriedStore): Store => {\n  const opening_hours = formatOpeningHours(s.opening_hours)\n\n  return {\n    ...s,\n    city: s.city ? capitalizeString(s.city) : s.city,\n    address: s.address ? capitalizeString(s.address) : s.address,\n    retailer_name: s.retailer_name ? capitalizeString(s.retailer_name) : s.retailer_name,\n    catalogues: s.catalogues ? s.catalogues.map((c) => enrichCatalogue(c)) : undefined,\n    opening_hours,\n    _isOpen: opening_hours.length > 0 ? opening_hours.some((entry) => entry.isOpen) : undefined,\n    _distance: s.dist_meters && s.dist_meters >= 0 ? formatDistanceNumber(s.dist_meters) : '',\n  }\n}\n\nexport default enrichStore\n","import 'react-native-url-polyfill/auto'\nimport type { Database } from '@milloome/types'\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL ?? false\nconst supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY ?? false\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('supabase connection error')\n}\n\nexport const supabaseClient = createClient<Database>(supabaseUrl, supabaseAnonKey)\n\nexport default supabaseClient\n","import { createApi, fakeBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport type { Retailer, Catalogue, Store, RetailerFilter } from './types'\nimport type { Coords } from '../redux/types'\nimport enrichCatalogue from '../utils/enrichCatalogue'\nimport enrichStore from '../utils/enrichStore'\nimport supabaseClient from '../utils/supabaseClient'\nimport { capitalizeString } from '../utils/text'\n\nconst catalogueFields =\n  'date_end, date_start, dist_meters, id, pdf_url, thumb_url, title, retailers!inner(*)'\n\nconst storeFields =\n  'address, city, dist_meters, id, location, name, province, retailer_id, retailer_name, retailer_slug, retailer_thumb_url, website_url, zipcode, latitude, longitude, description, opening_hours, metadata'\n\nexport const supabaseApi = createApi({\n  reducerPath: 'supabaseApi',\n  baseQuery: fakeBaseQuery(),\n  endpoints: (builder) => ({\n    getNearbyCataloguesByRetailerIdsWithAds: builder.query<\n      Catalogue[],\n      Coords & { distance: number; retailer_ids: string[] }\n    >({\n      queryFn: async ({ latitude, longitude, distance, retailer_ids }) => {\n        let query = supabaseClient.rpc('nearby_catalogues', {\n          distance,\n          lat: latitude,\n          long: longitude,\n        })\n\n        if (retailer_ids.length > 0) {\n          query = query.in('retailers.id', retailer_ids)\n        }\n\n        const { data, error } = await query\n          .select(catalogueFields)\n          .limit(parseInt(process.env.EXPO_PUBLIC_CATALOGUES_LIST_LIMIT ?? '30000', 10))\n\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((catalogue, index) => {\n          const enrichedCatalogue = enrichCatalogue(catalogue)\n\n          if (index === 1 || (index - 2) % 4 === 3) {\n            return { ...enrichedCatalogue, _hasAdNext: true }\n          } else {\n            return enrichedCatalogue\n          }\n        })\n\n        return { data: enrichedData }\n      },\n    }),\n    getCataloguesByIds: builder.query<Catalogue[], string[]>({\n      queryFn: async (ids) => {\n        const { data, error } = await supabaseClient\n          .from('catalogues')\n          .select(catalogueFields)\n          .in('id', ids)\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((catalogue) => enrichCatalogue(catalogue))\n        return { data: enrichedData }\n      },\n    }),\n    getStoresByIds: builder.query<Store[], string[]>({\n      queryFn: async (ids) => {\n        const { data, error } = await supabaseClient\n          .from('stores')\n          .select(storeFields)\n          .in('id', ids)\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((store) => enrichStore(store))\n        return { data: enrichedData }\n      },\n    }),\n    getStoreByIdWithCatalogues: builder.query<Store[], string>({\n      queryFn: async (id) => {\n        const { data, error } = await supabaseClient\n          .from('stores')\n          .select(`${storeFields}, catalogues(${catalogueFields})`)\n          .eq('id', id)\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((store) => enrichStore(store))\n        return { data: enrichedData }\n      },\n    }),\n    getNearbyStoresAndRetailersWithAds: builder.query<\n      { stores: Store[]; retailers: RetailerFilter[] },\n      Coords\n    >({\n      queryFn: async ({ latitude, longitude }) => {\n        const { data, error } = await supabaseClient\n          .rpc('nearby_stores', {\n            distance: parseInt(process.env.EXPO_PUBLIC_DISTANCE_QUERY ?? '30000', 10),\n            lat: latitude,\n            long: longitude,\n          })\n          .select(storeFields)\n          .limit(parseInt(process.env.EXPO_PUBLIC_STORES_LIST_LIMIT ?? '50', 10))\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData: {\n          stores: Store[]\n          retailers: RetailerFilter[]\n        } = { stores: [], retailers: [] }\n\n        data.forEach((store, index) => {\n          const enrichedStore = enrichStore(store)\n          if (index === 1 || (index - 2) % 4 === 3) {\n            enrichedData.stores.push({ ...enrichedStore, _hasAdNext: true })\n          } else {\n            enrichedData.stores.push(enrichedStore)\n          }\n          if (!store.retailer_id || !store.retailer_name || !store.retailer_slug) {\n            return\n          }\n          const existingRetailer = enrichedData.retailers.find((r) => r.id === store.retailer_id)\n          if (!existingRetailer) {\n            enrichedData.retailers.push({\n              id: store.retailer_id,\n              name: capitalizeString(store.retailer_name),\n              slug: store.retailer_slug,\n            })\n          }\n        })\n\n        return { data: enrichedData }\n      },\n    }),\n    getNearbyStoresByCatalogueId: builder.query<Store[], Coords & { id: string }>({\n      queryFn: async ({ id, latitude, longitude }) => {\n        const { data, error } = await supabaseClient\n          .rpc('nearby_stores', {\n            distance: parseInt(process.env.EXPO_PUBLIC_DISTANCE_QUERY ?? '30000', 10),\n            lat: latitude,\n            long: longitude,\n          })\n          .eq('catalogues.id', id)\n          .select(`${storeFields}, catalogues!inner(${catalogueFields})`)\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((store) => enrichStore(store))\n        return { data: enrichedData }\n      },\n    }),\n    getNearbyRetailers: builder.query<Retailer[], Coords & { distance: number }>({\n      queryFn: async ({ latitude, longitude, distance }) => {\n        const { data, error } = await supabaseClient\n          .rpc('nearby_retailers', {\n            distance,\n            lat: latitude,\n            long: longitude,\n          })\n          .select()\n\n        if (error) {\n          return { error }\n        }\n\n        const enrichedData = data.map((r) => ({\n          ...r,\n          name: r.name ? capitalizeString(r.name) : r.name,\n        }))\n\n        return { data: enrichedData }\n      },\n    }),\n  }),\n})\n\nexport const {\n  useGetNearbyCataloguesByRetailerIdsWithAdsQuery,\n  useGetCataloguesByIdsQuery,\n  useGetNearbyStoresByCatalogueIdQuery,\n  useGetNearbyStoresAndRetailersWithAdsQuery,\n  useGetStoresByIdsQuery,\n  useGetStoreByIdWithCataloguesQuery,\n  useGetNearbyRetailersQuery,\n} = supabaseApi\n","import { createApi, fakeBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport type { City } from './types'\nimport citiesList from '../mocks/cities.json'\nimport type { CountryCode, CitySlug } from '../navigation/types'\n\nexport const fakeApi = createApi({\n  reducerPath: 'fakeApi',\n  baseQuery: fakeBaseQuery(),\n  endpoints: (builder) => ({\n    getCities: builder.query<City[], CountryCode>({\n      queryFn: (countryCode) => {\n        const data = citiesList[countryCode]\n        return {\n          data: data.slice().sort((a, b) => {\n            return a.name.localeCompare(b.name)\n          }),\n        }\n      },\n    }),\n    getCityBySlug: builder.query<City[], { countryCode: CountryCode; citySlug: CitySlug }>({\n      queryFn: ({ citySlug, countryCode }) => {\n        const data = citiesList[countryCode].find((city) => city.slug === citySlug)\n        if (!data) {\n          return { error: { message: `city '${citySlug}' not found`, code: '404' } }\n        }\n        return { data: [data] }\n      },\n    }),\n  }),\n})\n\nexport const { useGetCityBySlugQuery, useGetCitiesQuery } = fakeApi\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport type { NomReverseResult, NomReverseResultAddress } from './types'\nimport type { Coords } from '../redux/types'\n\nexport const nominatimApi = createApi({\n  reducerPath: 'nominatimApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://nominatim.openstreetmap.org' }),\n  endpoints: (builder) => ({\n    // https://nominatim.org/release-docs/develop/api/Reverse\n    nomReverse: builder.query<NomReverseResultAddress, Coords>({\n      query: ({ latitude, longitude }) => `reverse?lat=${latitude}&lon=${longitude}&format=jsonv2`,\n      transformResponse: (response: NomReverseResult) => response.address,\n    }),\n  }),\n})\n\nexport const { useNomReverseQuery } = nominatimApi\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport type { PhoFeature, PhoFeatureCollection } from './types'\nimport { DefaultLocations } from '../constants'\nimport type { CountryCode } from '../navigation/types'\nimport type { Location } from '../redux/types'\n\nexport const photonApi = createApi({\n  reducerPath: 'photonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://photon.komoot.io' }),\n  endpoints: (builder) => ({\n    phoReverse: builder.query<PhoFeature, Location>({\n      query: ({ latitude, longitude }) => `reverse?lat=${latitude}&lon=${longitude}`,\n      transformResponse: (response: PhoFeatureCollection) => {\n        return response.features[0]\n      },\n    }),\n    phoSearch: builder.query<PhoFeature[], { query: string; countryCode: CountryCode }>({\n      query: ({ query, countryCode }) => {\n        const { boundingBox } = DefaultLocations[countryCode]\n        return `/api/?q=${query}&bbox=${boundingBox}`\n      },\n      transformResponse: (response: PhoFeatureCollection, _, { countryCode }) => {\n        const filteredResponse = response.features.filter(\n          (feature) => feature.properties.countrycode === countryCode.toUpperCase(),\n        )\n        return filteredResponse\n      },\n    }),\n  }),\n})\n\nexport const { usePhoReverseQuery, usePhoSearchQuery } = photonApi\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport type { IpApiResponse } from './types'\n\nexport const ipapiApi = createApi({\n  reducerPath: 'ipapiApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://ipapi.co' }),\n  endpoints: (builder) => ({\n    ipapiJson: builder.query<IpApiResponse, unknown>({\n      query: () => `json`,\n    }),\n  }),\n})\n\nexport const { useIpapiJsonQuery } = ipapiApi\n","import type { RootStackParamList } from '../../navigation/types'\n\nconst createScreenName = (\n  routeName: keyof RootStackParamList,\n  params: RootStackParamList[keyof RootStackParamList] | object,\n) => {\n  switch (routeName) {\n    case 'CatalogueDetail':\n      if ('id' in params) {\n        return `${routeName} - ${params.id}`\n      }\n      break\n    case 'StoreDetail':\n      if ('id' in params) {\n        return `${routeName} - ${params.id}`\n      }\n      break\n    default:\n      return routeName\n  }\n}\n\nexport default createScreenName\n","import { initializeApp } from 'firebase/app'\n\nconst firebaseConfig = {\n  apiKey: process.env.EXPO_PUBLIC_FIREBASE_APIKEY,\n  authDomain: process.env.EXPO_PUBLIC_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.EXPO_PUBLIC_FIREBASE_PROJECTID,\n  storageBucket: process.env.EXPO_PUBLIC_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.EXPO_PUBLIC_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.EXPO_PUBLIC_FIREBASE_APPID,\n  measurementId: process.env.EXPO_PUBLIC_FIREBASE_MEASUREMENTID,\n}\n\nconst firebaseApp = initializeApp(firebaseConfig)\n\n// Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nexport default firebaseApp\n","/* eslint-disable camelcase */\nimport type { Route } from '@react-navigation/native'\nimport {\n  initializeAnalytics,\n  logEvent as logGaEvent,\n  setUserProperties as setGaUserProperties,\n} from 'firebase/analytics'\n\nimport createScreenName from './createScreenName'\nimport firebaseApp from './firebaseApp.web'\nimport type { CitySlug, CountryCode } from '../../navigation/types'\n\nconst analytics = initializeAnalytics(firebaseApp, { config: { send_page_view: false } })\n\nexport const logScreenView = async ({ name, path, params = {} }: Route<string>) => {\n  const { countryCode, citySlug }: Readonly<{ countryCode?: CountryCode; citySlug?: CitySlug }> =\n    params\n\n  // eslint-disable-next-line @typescript-eslint/await-thenable\n  await logGaEvent(analytics, 'page_view', {\n    // @ts-expect-error: generic route is not typed\n    page_title: createScreenName(name, params),\n    // FIXME: route path is undefined except the first route in state\n    page_path: path ?? window.location.pathname,\n    page_location: window.location.href,\n    country_code: countryCode,\n    city_slug: citySlug,\n  })\n}\n\nexport const logEvent = async (\n  name: string,\n  params: { countryCode: CountryCode; citySlug?: CitySlug } & Record<string, unknown>,\n) => {\n  const { countryCode, citySlug, ...restOfParams } = params\n  // eslint-disable-next-line @typescript-eslint/await-thenable\n  await logGaEvent(analytics, name, {\n    country_code: countryCode,\n    city_slug: citySlug,\n    ...restOfParams,\n  })\n}\n\nexport const setUserProperties = async (properties: Record<string, string | null>) => {\n  // eslint-disable-next-line @typescript-eslint/await-thenable\n  await setGaUserProperties(analytics, properties)\n}\n","import type { LocationObject } from 'expo-location'\nimport { getCurrentPositionAsync, LocationAccuracy } from 'expo-location'\nimport { Platform } from 'react-native'\n\nconst delay = (timeInMilliseconds: number) => {\n  return new Promise<null>((resolve) => {\n    setTimeout(() => resolve(null), timeInMilliseconds)\n  })\n}\n\nexport const getLocation = async () => {\n  const ANDROID_DELAY_IN_MS = 8 * 1000 // 8s\n  const IOS_DELAY_IN_MS = 15 * 1000 // 15s\n\n  const DELAY_IN_MS = Platform.OS === 'ios' ? IOS_DELAY_IN_MS : ANDROID_DELAY_IN_MS\n\n  const MAX_TRIES = 3\n  let tries = 1\n\n  let location: LocationObject | null = null\n\n  let locationError: Error | null = null\n\n  do {\n    try {\n      location = await Promise.race([\n        delay(DELAY_IN_MS),\n        getCurrentPositionAsync({\n          accuracy: LocationAccuracy.High,\n          distanceInterval: 0,\n        }),\n      ])\n\n      if (!location) {\n        throw new Error('Timeout')\n      }\n    } catch (err) {\n      locationError = err as Error\n    } finally {\n      tries += 1\n    }\n  } while (!location && tries <= MAX_TRIES)\n\n  if (!location) {\n    throw locationError ?? new Error('Location unavailable')\n  }\n\n  return location\n}\n\nexport default getLocation\n","/* eslint-disable camelcase */\nimport { Platform } from 'react-native'\nimport { MMKV } from 'react-native-mmkv'\n\nexport const storageKeys = {\n  location: 'location',\n  favourite_catalogues: 'favourite_catalogues',\n  favourite_stores: 'favourite_stores',\n  onboard: 'user_onboard',\n  citySlug: 'citySlug',\n  theme: 'theme',\n  filters: 'filters',\n  catalogues_view_count: 'catalogues_view_count',\n}\n\nconst storageId = process.env.EXPO_PUBLIC_STORAGE_ID ?? false\n\nif (!storageId) {\n  throw new Error('missing storage')\n}\n\nexport const storage = new MMKV(\n  Platform.select({\n    native: {\n      id: storageId,\n    },\n  }),\n)\n\nexport default storage\n","import {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native'\nimport merge from 'deepmerge'\nimport { adaptNavigationTheme, MD3LightTheme, MD3DarkTheme } from 'react-native-paper'\n\nconst roundness = 2\n\n// primary = #FFCC01\n// secondary = #FF999A\n// tertiary = #868686\n\nconst MilloomeLightTheme = merge(MD3LightTheme, {\n  roundness,\n  colors: {\n    primary: 'rgb(116, 91, 0)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(255, 224, 139)',\n    onPrimaryContainer: 'rgb(36, 26, 0)',\n    secondary: 'rgb(156, 65, 69)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(255, 218, 217)',\n    onSecondaryContainer: 'rgb(64, 0, 9)',\n    tertiary: 'rgb(0, 104, 116)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(151, 240, 255)',\n    onTertiaryContainer: 'rgb(0, 31, 36)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(30, 27, 22)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(30, 27, 22)',\n    surfaceVariant: 'rgb(235, 225, 207)',\n    onSurfaceVariant: 'rgb(76, 70, 57)',\n    outline: 'rgb(126, 118, 103)',\n    outlineVariant: 'rgb(207, 198, 180)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(51, 48, 42)',\n    inverseOnSurface: 'rgb(247, 240, 231)',\n    inversePrimary: 'rgb(241, 193, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(248, 243, 242)',\n      level2: 'rgb(244, 238, 235)',\n      level3: 'rgb(240, 233, 227)',\n      level4: 'rgb(238, 232, 224)',\n      level5: 'rgb(236, 229, 219)',\n    },\n    surfaceDisabled: 'rgba(30, 27, 22, 0.12)',\n    onSurfaceDisabled: 'rgba(30, 27, 22, 0.38)',\n    backdrop: 'rgba(53, 48, 36, 0.4)',\n  },\n})\n\nconst MilloomeDarkTheme = merge(MD3DarkTheme, {\n  roundness,\n  colors: {\n    primary: 'rgb(241, 193, 0)',\n    onPrimary: 'rgb(61, 47, 0)',\n    primaryContainer: 'rgb(88, 68, 0)',\n    onPrimaryContainer: 'rgb(255, 224, 139)',\n    secondary: 'rgb(255, 179, 179)',\n    onSecondary: 'rgb(95, 19, 26)',\n    secondaryContainer: 'rgb(126, 42, 47)',\n    onSecondaryContainer: 'rgb(255, 218, 217)',\n    tertiary: 'rgb(79, 216, 235)',\n    onTertiary: 'rgb(0, 54, 61)',\n    tertiaryContainer: 'rgb(0, 79, 88)',\n    onTertiaryContainer: 'rgb(151, 240, 255)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(30, 27, 22)',\n    onBackground: 'rgb(232, 226, 217)',\n    surface: 'rgb(30, 27, 22)',\n    onSurface: 'rgb(232, 226, 217)',\n    surfaceVariant: 'rgb(76, 70, 57)',\n    onSurfaceVariant: 'rgb(207, 198, 180)',\n    outline: 'rgb(152, 144, 128)',\n    outlineVariant: 'rgb(76, 70, 57)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(232, 226, 217)',\n    inverseOnSurface: 'rgb(51, 48, 42)',\n    inversePrimary: 'rgb(116, 91, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(41, 35, 21)',\n      level2: 'rgb(47, 40, 20)',\n      level3: 'rgb(53, 45, 20)',\n      level4: 'rgb(55, 47, 19)',\n      level5: 'rgb(60, 50, 19)',\n    },\n    surfaceDisabled: 'rgba(232, 226, 217, 0.12)',\n    onSurfaceDisabled: 'rgba(232, 226, 217, 0.38)',\n    backdrop: 'rgba(53, 48, 36, 0.4)',\n  },\n})\n\nconst { LightTheme: AdaptedLightTheme, DarkTheme: AdaptedDarkTheme } = adaptNavigationTheme({\n  reactNavigationLight: NavigationDefaultTheme,\n  reactNavigationDark: NavigationDarkTheme,\n})\n\n// if the theme colors change, change theme also in index.html css vars:\n// --material-background-dark\n// --material-background-light\n\nexport const LightTheme = merge(AdaptedLightTheme, MilloomeLightTheme)\nexport const DarkTheme = merge(AdaptedDarkTheme, MilloomeDarkTheme)\n","import type { BottomSheetProps } from '@gorhom/bottom-sheet'\nimport type BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet'\nimport { useCallback, useRef } from 'react'\nimport type { NativeEventSubscription } from 'react-native'\nimport { BackHandler } from 'react-native'\n\n/**\n * hook that dismisses the bottom sheet on the hardware back button press if it is visible\n * @param bottomSheetRef ref to the bottom sheet which is going to be closed/dismissed on the back press\n */\nexport const useBottomSheetBackHandler = (bottomSheetRef: React.RefObject<BottomSheet | null>) => {\n  const backHandlerSubscriptionRef = useRef<NativeEventSubscription | null>(null)\n  const handleSheetPositionChange = useCallback<NonNullable<BottomSheetProps['onChange']>>(\n    (index) => {\n      const isBottomSheetVisible = index >= 1\n      if (isBottomSheetVisible && !backHandlerSubscriptionRef.current) {\n        // setup the back handler if the bottom sheet is right in front of the user\n        backHandlerSubscriptionRef.current = BackHandler.addEventListener(\n          'hardwareBackPress',\n          () => {\n            bottomSheetRef.current?.collapse()\n            return true\n          },\n        )\n      } else if (!isBottomSheetVisible) {\n        backHandlerSubscriptionRef.current?.remove()\n        backHandlerSubscriptionRef.current = null\n      }\n    },\n    [bottomSheetRef, backHandlerSubscriptionRef],\n  )\n  return { handleSheetPositionChange }\n}\n\nexport default useBottomSheetBackHandler\n","import { useWindowDimensions } from 'react-native'\n\nimport { Breakpoints } from '../constants'\n\nexport const useBreakpoint = () => {\n  const { width: windowWidth } = useWindowDimensions()\n\n  const breakpoint = Breakpoints.find((bp, index, array) => {\n    const nextBp = array[index + 1]\n    return windowWidth >= bp.value && (nextBp ? windowWidth < nextBp.value : true)\n  })\n\n  return breakpoint?.name\n}\n\nexport default useBreakpoint\n","import type { BpValues } from './types'\nimport useBreakpoint from './useBreakpoint'\n\nexport const useBreakpointsValue = (bpValues: BpValues) => {\n  const breakpoint = useBreakpoint()\n  return breakpoint ? bpValues[breakpoint as keyof BpValues] : undefined\n}\n\nexport default useBreakpointsValue\n","import type { DependencyList } from 'react'\nimport { useMemo } from 'react'\nimport type { ImageStyle, TextStyle, ViewStyle } from 'react-native'\nimport { StyleSheet } from 'react-native'\nimport type { MD3Theme } from 'react-native-paper'\nimport { useTheme } from 'react-native-paper'\n\ntype NamedStyles<T> = { [P in keyof T]: ViewStyle | TextStyle | ImageStyle }\n\nexport const useStyles = <T extends NamedStyles<T> | NamedStyles<unknown>>(\n  create: (theme: MD3Theme) => T | NamedStyles<T>,\n  deps: DependencyList = [],\n): T => {\n  const theme = useTheme()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => StyleSheet.create(create(theme)), [create, theme, ...deps])\n}\n","import type { PayloadAction } from '@reduxjs/toolkit'\nimport { createSlice } from '@reduxjs/toolkit'\nimport type { AppStateStatus } from 'react-native'\nimport { AppState as NativeAppState } from 'react-native'\n\nimport type { CitySlug, CountryCode } from '../navigation/types'\nimport { storage, storageKeys } from '../utils'\n\nexport interface AppState {\n  status: AppStateStatus\n  countryCode: CountryCode\n  citySlug: CitySlug | null\n}\n\nconst initialState: AppState = {\n  status: NativeAppState.currentState,\n  countryCode: process.env.EXPO_PUBLIC_DEFAULT_COUNTRY_CODE as CountryCode,\n  citySlug: null,\n}\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setAppStatus: (state, action: PayloadAction<AppStateStatus>) => {\n      state.status = action.payload\n    },\n    setCountryCode: (state, action: PayloadAction<CountryCode>) => {\n      state.countryCode = action.payload\n    },\n    setCitySlug: (state, action: PayloadAction<string>) => {\n      storage.set(storageKeys.citySlug, action.payload)\n      state.citySlug = action.payload\n    },\n    deleteCitySlug: (state) => {\n      storage.delete(storageKeys.citySlug)\n      state.citySlug = null\n    },\n  },\n})\n\nexport const { setAppStatus, setCountryCode, setCitySlug, deleteCitySlug } = appSlice.actions\nexport default appSlice\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport type ConsentState = object\n\nconst initialState: ConsentState = {}\n\nexport const consentSlice = createSlice({\n  name: 'consent',\n  initialState,\n  reducers: {\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    setStoredConsentAndChoices: () => {},\n    showPrivacyOptionsForm: () => {},\n    loadAndShowConsentFormIfRequired: () => {},\n    /* eslint-enable */\n  },\n})\n\nexport const {\n  setStoredConsentAndChoices,\n  showPrivacyOptionsForm,\n  loadAndShowConsentFormIfRequired,\n} = consentSlice.actions\nexport default consentSlice\n","import type { PayloadAction } from '@reduxjs/toolkit'\nimport { createSlice } from '@reduxjs/toolkit'\nimport type { ColorSchemeName } from 'react-native'\n\nimport { storage, storageKeys } from '../utils'\n\nexport interface UiState {\n  catalogueStoreDialog: {\n    type: 'catalogue' | 'store' | null\n    open: boolean\n    id: string | null\n  }\n  theme: ColorSchemeName\n}\n\nconst initialState: UiState = {\n  catalogueStoreDialog: {\n    type: null,\n    open: false,\n    id: null,\n  },\n  theme: (storage.getString(storageKeys.theme) as ColorSchemeName) ?? 'light',\n}\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    openCatalogueStoreDialog: (\n      state,\n      action: PayloadAction<{ type: 'store' | 'catalogue'; id: string }>,\n    ) => {\n      state.catalogueStoreDialog = {\n        open: true,\n        id: action.payload.id,\n        type: action.payload.type,\n      }\n    },\n    closeCatalogueStoreDialog: (state) => {\n      state.catalogueStoreDialog = initialState.catalogueStoreDialog\n    },\n    setTheme: (state, action: PayloadAction<'light' | 'dark'>) => {\n      storage.set(storageKeys.theme, action.payload)\n      state.theme = action.payload\n    },\n  },\n})\n\nexport const { openCatalogueStoreDialog, closeCatalogueStoreDialog, setTheme } = uiSlice.actions\n\nexport default uiSlice\n","import type { PayloadAction } from '@reduxjs/toolkit'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport type { RootState } from './store'\nimport type { Location } from './types'\nimport { DefaultLocations, FiltersDefault } from '../constants'\nimport type { CountryCode } from '../navigation/types'\nimport { logEvent, setUserProperties, storage, storageKeys } from '../utils'\n\nexport interface UserState {\n  onboard: boolean\n  location: Location | null\n  favourite_catalogues: string[]\n  favourite_stores: string[]\n  filters: {\n    distance: number\n    retailer_ids: string[]\n  }\n  catalogues_view_count: number\n}\n\nconst getInitialCatalogueViewCount = () => {\n  const storedCount = storage.getNumber(storageKeys.catalogues_view_count)\n  return storedCount ?? 0\n}\n\nconst getInitialFavCatalogues = () => {\n  const storedFavs = storage.getString(storageKeys.favourite_catalogues)\n  if (storedFavs) {\n    return JSON.parse(storedFavs) as string[]\n  } else {\n    return []\n  }\n}\n\nconst getInitialFavStores = () => {\n  const storedFavs = storage.getString(storageKeys.favourite_stores)\n  if (storedFavs) {\n    return JSON.parse(storedFavs) as string[]\n  } else {\n    return []\n  }\n}\n\nconst getInitialCataloguesFilters = () => {\n  const filters = storage.getString(storageKeys.filters)\n  if (filters) {\n    return JSON.parse(filters) as UserState['filters']\n  } else {\n    return FiltersDefault\n  }\n}\n\nconst getInitialLocation = () => {\n  const storedLocation = storage.getString(storageKeys.location)\n  if (storedLocation) {\n    return JSON.parse(storedLocation) as Location\n  } else {\n    return null\n  }\n}\n\nconst initialState: UserState = {\n  onboard: storage.getBoolean(storageKeys.onboard) ?? false,\n  location: getInitialLocation(),\n  favourite_catalogues: getInitialFavCatalogues(),\n  favourite_stores: getInitialFavStores(),\n  filters: getInitialCataloguesFilters(),\n  catalogues_view_count: getInitialCatalogueViewCount(),\n}\n\nexport const setDefaultLocation = createAsyncThunk<\n  UserState['location'],\n  void,\n  {\n    state: RootState\n  }\n>('user/setDefaultLocation', (_, { dispatch, getState }) => {\n  const state = getState()\n  const defaultLocation = DefaultLocations[state.app.countryCode]\n  dispatch(deleteFilters())\n  return defaultLocation\n})\n\nexport const setLocation = createAsyncThunk('user/setLocation', (value: Location, { dispatch }) => {\n  storage.set(storageKeys.location, JSON.stringify(value))\n  dispatch(deleteFilters())\n  return value\n})\n\nexport const setCityLocation = createAsyncThunk(\n  'user/setCityLocation',\n  (value: Location, { dispatch }) => {\n    storage.delete(storageKeys.location)\n    dispatch(deleteFilters())\n    return value\n  },\n)\n\nexport const setFavouriteCatalogue = createAsyncThunk<\n  UserState['favourite_catalogues'],\n  string,\n  {\n    state: RootState\n  }\n>('user/setFavouriteCatalogue', async (id, { getState }) => {\n  const state = getState()\n  await logEvent('favourite_catalogue_set', { countryCode: state.app.countryCode })\n  const storedFavs = storage.getString(storageKeys.favourite_catalogues)\n  const favs = storedFavs ? (JSON.parse(storedFavs) as string[]) : []\n  favs.push(id)\n  storage.set(storageKeys.favourite_catalogues, JSON.stringify(favs))\n  return favs\n})\n\nexport const setFavouriteStore = createAsyncThunk<\n  UserState['favourite_stores'],\n  string,\n  {\n    state: RootState\n  }\n>('user/setFavouriteStore', async (id, { getState }) => {\n  const state = getState()\n  await logEvent('favourite_store_set', { countryCode: state.app.countryCode })\n  const storedFavs = storage.getString(storageKeys.favourite_stores)\n  const favs = storedFavs ? (JSON.parse(storedFavs) as string[]) : []\n  favs.push(id)\n  storage.set(storageKeys.favourite_stores, JSON.stringify(favs))\n  return favs\n})\n\nexport const setCataloguesViewCount = createAsyncThunk<\n  UserState['catalogues_view_count'],\n  unknown,\n  {\n    state: RootState\n  }\n>('user/setCataloguesViewCount', async (_, { getState }) => {\n  const state = getState()\n  const count = state.user.catalogues_view_count + 1\n  await setUserProperties({ catalogues_view_count: `${count}` })\n  storage.set(storageKeys.catalogues_view_count, count)\n  return count\n})\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setDefaultLocation: (state, action: PayloadAction<CountryCode>) => {\n      const { latitude, longitude, display } = DefaultLocations[action.payload]\n      storage.set(storageKeys.location, JSON.stringify({ latitude, longitude, display }))\n      state.location = { latitude, longitude, display }\n    },\n    setOnboard: (state, action: PayloadAction<UserState['onboard']>) => {\n      storage.set(storageKeys.onboard, action.payload)\n      state.onboard = action.payload\n    },\n    deleteFavouriteCatalogue: (state, action: PayloadAction<string>) => {\n      const storedFavs = storage.getString(storageKeys.favourite_catalogues)\n      const favs = storedFavs ? (JSON.parse(storedFavs) as string[]) : []\n      const newFavs = favs.filter((fav) => fav !== action.payload)\n      storage.set(storageKeys.favourite_catalogues, JSON.stringify(newFavs))\n      state.favourite_catalogues = newFavs\n    },\n    deleteFavouriteStore: (state, action: PayloadAction<string>) => {\n      const storedFavs = storage.getString(storageKeys.favourite_stores)\n      const favs = storedFavs ? (JSON.parse(storedFavs) as string[]) : []\n      const newFavs = favs.filter((fav) => fav !== action.payload)\n      storage.set(storageKeys.favourite_stores, JSON.stringify(newFavs))\n      state.favourite_stores = newFavs\n    },\n    emptyFavouriteCatalogues: (state) => {\n      storage.set(storageKeys.favourite_catalogues, JSON.stringify([]))\n      state.favourite_catalogues = []\n    },\n    emptyFavouriteStores: (state) => {\n      storage.set(storageKeys.favourite_stores, JSON.stringify([]))\n      state.favourite_stores = []\n    },\n    setFilters: (state, action: PayloadAction<UserState['filters']>) => {\n      storage.set(storageKeys.filters, JSON.stringify(action.payload))\n      state.filters = action.payload\n    },\n    deleteFilters: (state) => {\n      storage.delete(storageKeys.filters)\n      state.filters = FiltersDefault\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(setLocation.fulfilled, (state, action) => {\n      state.location = action.payload\n    })\n    builder.addCase(setCityLocation.fulfilled, (state, action) => {\n      state.location = action.payload\n    })\n    builder.addCase(setDefaultLocation.fulfilled, (state, action) => {\n      state.location = action.payload\n    })\n    builder.addCase(setCataloguesViewCount.fulfilled, (state, action) => {\n      state.catalogues_view_count = action.payload\n    })\n    builder.addCase(setFavouriteCatalogue.fulfilled, (state, action) => {\n      state.favourite_catalogues = action.payload\n    })\n    builder.addCase(setFavouriteStore.fulfilled, (state, action) => {\n      state.favourite_stores = action.payload\n    })\n  },\n})\n\nexport const {\n  setOnboard,\n  deleteFavouriteCatalogue,\n  deleteFavouriteStore,\n  emptyFavouriteCatalogues,\n  emptyFavouriteStores,\n  setFilters,\n  deleteFilters,\n} = userSlice.actions\nexport default userSlice\n","import { configureStore } from '@reduxjs/toolkit'\n// import { setupListeners } from '@reduxjs/toolkit/query'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport appSlice from './appSlice'\nimport consentSlice from './consentSlice'\nimport uiSlice from './uiSlice'\nimport userSlice from './userSlice'\nimport { fakeApi, supabaseApi, nominatimApi, ipapiApi, photonApi } from '../api'\n\nexport const store = configureStore({\n  reducer: {\n    // Add the generated reducer as a specific top-level slice\n    [supabaseApi.reducerPath]: supabaseApi.reducer,\n    [fakeApi.reducerPath]: fakeApi.reducer,\n    [nominatimApi.reducerPath]: nominatimApi.reducer,\n    [photonApi.reducerPath]: photonApi.reducer,\n    [ipapiApi.reducerPath]: ipapiApi.reducer,\n    app: appSlice.reducer,\n    consent: consentSlice.reducer,\n    ui: uiSlice.reducer,\n    user: userSlice.reducer,\n  },\n  // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(\n      supabaseApi.middleware,\n      fakeApi.middleware,\n      nominatimApi.middleware,\n      photonApi.middleware,\n      ipapiApi.middleware,\n    ),\n})\n\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\n// setupListeners(store.dispatch)\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import 'react-native-gesture-handler'\nimport { useReduxDevToolsExtension } from '@react-navigation/devtools'\nimport type { Route, Theme } from '@react-navigation/native'\nimport { NavigationContainer, useNavigationContainerRef } from '@react-navigation/native'\nimport * as Linking from 'expo-linking'\nimport { useCallback, useRef } from 'react'\n\nimport type { RootStackParamList, CountryCode, CitySlug } from './types'\nimport { fakeApi } from '../api'\nimport { Routes } from '../constants'\nimport {\n  deleteCitySlug,\n  setCityLocation,\n  setCitySlug,\n  setCountryCode,\n  useAppDispatch,\n  useAppSelector,\n} from '../redux'\nimport { logScreenView } from '../utils'\n\nexport interface NavigationProviderProps {\n  theme: Theme\n  children: React.JSX.Element\n}\n\nexport const NavigationProvider = ({ theme, children }: NavigationProviderProps) => {\n  const navigationRef = useNavigationContainerRef<RootStackParamList>()\n  const routeRef = useRef<Route<string> | undefined>()\n  const dispatch = useAppDispatch()\n  const countryCodeList = process.env.EXPO_PUBLIC_COUNTRY_CODE_LIST?.split(',')\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n\n  useReduxDevToolsExtension(navigationRef)\n\n  const getPath = useCallback(\n    (route: string) => {\n      return Routes[countryCode][route] || route\n    },\n    [countryCode],\n  )\n\n  const prefix = Linking.createURL('/')\n  const linking = {\n    prefixes: ['https://milloo.me', prefix],\n    config: {\n      screens: {\n        HomeTabs: {\n          screens: {\n            Catalogues: '/:countryCode/:citySlug?',\n            Stores: `/:countryCode/:citySlug?/${getPath('Stores')}`,\n            ForYou: `/:countryCode/${getPath('ForYou')}`,\n          },\n        },\n        CatalogueDetail: {\n          path: `/:countryCode/${getPath('CatalogueDetail')}/:id/:pageNumber?`,\n          parse: {\n            pageNumber: Number,\n          },\n        },\n        StoreDetail: {\n          path: `/:countryCode/${getPath('StoreDetail')}/:id`,\n          parse: {\n            pageNumber: Number,\n          },\n        },\n        Geo: `/:countryCode/${getPath('Geo')}`,\n        Contacts: `/:countryCode/${getPath('Contacts')}`,\n        NotFound: '*',\n        PrivacyPolicy: '/privacy-policy',\n      },\n    },\n  }\n\n  const handleCitySlug = useCallback(\n    (countryCode: CountryCode, citySlug: CitySlug) => {\n      dispatch(fakeApi.endpoints.getCityBySlug.initiate({ countryCode, citySlug }))\n        .then(({ data }) => {\n          if (data) {\n            void dispatch(\n              setCityLocation({\n                latitude: parseFloat(data[0].lat),\n                longitude: parseFloat(data[0].lng),\n                display: data[0].name,\n              }),\n            )\n            dispatch(setCitySlug(citySlug))\n          } else {\n            // wrong slug\n            dispatch(deleteCitySlug())\n            navigationRef.navigate('HomeTabs', { screen: 'Catalogues', params: { countryCode } })\n          }\n        })\n        // api error\n        .catch(() => {\n          dispatch(deleteCitySlug())\n          navigationRef.navigate('HomeTabs', { screen: 'Catalogues', params: { countryCode } })\n        })\n    },\n    [dispatch, navigationRef],\n  )\n\n  const handleOnReady = useCallback(async () => {\n    routeRef.current = navigationRef.getCurrentRoute()\n\n    if (routeRef.current) {\n      await logScreenView(routeRef.current)\n\n      // @ts-expect-error: https://reactnavigation.org/docs/typescript/#annotating-useroute\n      const { countryCode, citySlug }: { countryCode: CountryCode; citySlug?: CitySlug } =\n        routeRef.current.params\n\n      if (!countryCodeList?.includes(countryCode)) {\n        navigationRef.navigate('HomeTabs', {\n          screen: 'Catalogues',\n          params: { countryCode: process.env.EXPO_PUBLIC_DEFAULT_COUNTRY_CODE as CountryCode },\n        })\n      } else {\n        dispatch(setCountryCode(countryCode))\n      }\n\n      if (citySlug) {\n        handleCitySlug(countryCode, citySlug)\n      } else {\n        dispatch(deleteCitySlug())\n      }\n    }\n  }, [countryCodeList, dispatch, handleCitySlug, navigationRef])\n\n  const handleOnStateChange = useCallback(async () => {\n    const previousRoute = routeRef.current\n    const currentRoute = navigationRef.getCurrentRoute()\n\n    if (previousRoute?.key !== currentRoute?.key) {\n      // Save the current route for later comparison\n      routeRef.current = currentRoute\n\n      if (currentRoute) {\n        await logScreenView(currentRoute)\n\n        // @ts-expect-error: https://reactnavigation.org/docs/typescript/#annotating-useroute\n        const { citySlug, countryCode }: { countryCode: CountryCode; citySlug?: CitySlug } =\n          currentRoute.params\n\n        if (citySlug) {\n          handleCitySlug(countryCode, citySlug)\n        } else {\n          dispatch(deleteCitySlug())\n        }\n      }\n    }\n  }, [dispatch, handleCitySlug, navigationRef])\n\n  return (\n    <NavigationContainer\n      linking={linking}\n      theme={theme}\n      ref={navigationRef}\n      onReady={handleOnReady}\n      onStateChange={handleOnStateChange}\n    >\n      {children}\n    </NavigationContainer>\n  )\n}\nexport default NavigationProvider\n","import type { BottomTabHeaderProps } from '@react-navigation/bottom-tabs'\nimport { useLinkProps } from '@react-navigation/native'\nimport { Image } from 'expo-image'\nimport { StyleSheet, TouchableOpacity } from 'react-native'\nimport type { AppbarHeaderProps } from 'react-native-paper'\nimport { Appbar } from 'react-native-paper'\n\nimport { SpacingBase } from '../constants'\nimport { useAppSelector } from '../redux'\n\nexport interface HeaderTabProps extends BottomTabHeaderProps {\n  left?: React.ReactNode\n  right?: React.ReactNode\n  mode?: AppbarHeaderProps['mode']\n  onPressMenu?: () => void\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 40,\n    width: 153,\n  },\n})\n\nconst HeaderTab = ({ route, options, left, right, mode, onPressMenu }: HeaderTabProps) => {\n  const { countryCode, citySlug } = useAppSelector((store) => store.app)\n  const { onPress } = useLinkProps({\n    to: {\n      screen: 'HomeTabs',\n      params: {\n        screen: 'Catalogues',\n        params: citySlug ? { countryCode, citySlug } : { countryCode },\n      },\n    },\n  })\n\n  return (\n    <Appbar.Header mode={mode ?? 'center-aligned'}>\n      <Appbar.Action size={SpacingBase * 3} icon=\"menu\" onPress={onPressMenu} />\n      <Appbar.Content\n        title={\n          <TouchableOpacity onPress={() => onPress()}>\n            <Image\n              priority=\"high\"\n              style={styles.image}\n              contentFit=\"contain\"\n              alt={process.env.EXPO_PUBLIC_APP_NAME}\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              source={require('../assets/images/logo-2.png')}\n            />\n          </TouchableOpacity>\n        }\n      />\n      {right}\n    </Appbar.Header>\n  )\n}\n\nexport default HeaderTab\n","import { useLinkProps } from '@react-navigation/native'\nimport { useCallback } from 'react'\nimport { Platform } from 'react-native'\nimport { Drawer } from 'react-native-paper'\n\nimport { Copies } from '../constants'\nimport { setTheme, showPrivacyOptionsForm, useAppDispatch, useAppSelector } from '../redux'\n\nconst MainDrawer = () => {\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n  const theme = useAppSelector((state) => state.ui.theme)\n  const dispatch = useAppDispatch()\n\n  const { onPress: onContactsPress } = useLinkProps({\n    to: { screen: 'Contacts', params: { countryCode } },\n  })\n\n  const handleOnSwitchTheme = useCallback(() => {\n    dispatch(setTheme(theme === 'dark' ? 'light' : 'dark'))\n  }, [dispatch, theme])\n\n  const handleOnConsentForm = useCallback(async () => {\n    await dispatch(showPrivacyOptionsForm())\n  }, [dispatch])\n\n  return (\n    <Drawer.Section showDivider={false}>\n      <Drawer.Item\n        label={Copies.toggle_theme}\n        icon=\"theme-light-dark\"\n        onPress={handleOnSwitchTheme}\n      />\n      <Drawer.Item\n        label={Copies.contacts}\n        icon=\"message-reply-text-outline\"\n        onPress={onContactsPress}\n      />\n      {Platform.OS !== 'web' && (\n        <Drawer.Item label={Copies.consent_form} icon=\"eye-outline\" onPress={handleOnConsentForm} />\n      )}\n    </Drawer.Section>\n  )\n}\n\nexport default MainDrawer\n","import { View } from 'react-native'\nimport { Text } from 'react-native-paper'\n\nimport { SpacingBase } from '../constants'\nimport { useStyles } from '../utils'\n\nexport interface RetailerDistanceProps {\n  retailer: string\n  distance: string\n  spaceBetween?: boolean\n}\n\nconst RetailerDistance = ({ retailer, distance, spaceBetween }: RetailerDistanceProps) => {\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      main: {\n        flexDirection: 'row',\n        justifyContent: spaceBetween ? 'space-between' : 'flex-start',\n        alignItems: 'center',\n      },\n      retailerContainer: {\n        marginRight: SpacingBase,\n        backgroundColor: colors.secondaryContainer,\n        borderRadius: roundness * 3,\n        paddingLeft: SpacingBase / 2,\n        paddingRight: SpacingBase / 2,\n        paddingTop: SpacingBase / 4,\n        paddingBottom: SpacingBase / 4,\n        maxWidth: spaceBetween ? '65%' : '100%',\n      },\n      retailer: {\n        color: colors.onSecondaryContainer,\n      },\n    }),\n    [spaceBetween],\n  )\n\n  return (\n    <View style={styles.main}>\n      <View style={styles.retailerContainer}>\n        <Text numberOfLines={1} style={styles.retailer} variant=\"labelSmall\">\n          {retailer}\n        </Text>\n      </View>\n      <Text variant=\"labelSmall\">{distance}</Text>\n    </View>\n  )\n}\n\nexport default RetailerDistance\n","import { useMemo } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Icon, Text } from 'react-native-paper'\n\nimport { Copies, ExtraColors, SpacingBase } from '../constants'\n\nexport interface StoreOpeningProps {\n  isOpen: boolean\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginLeft: SpacingBase / 2,\n  },\n})\n\nconst StoreOpening = ({ isOpen }: StoreOpeningProps) => {\n  const openingProps = useMemo(() => {\n    switch (isOpen) {\n      case true:\n        return { icon: 'clock-check-outline', color: ExtraColors.forestgreen, text: Copies.open }\n      default:\n        return { icon: 'clock-remove-outline', color: ExtraColors.gray, text: Copies.closed }\n    }\n  }, [isOpen])\n\n  return (\n    <View style={styles.main}>\n      <Icon color={openingProps.color} size={SpacingBase * 2} source={openingProps.icon} />\n      <Text style={[styles.text, { color: openingProps.color }]} variant=\"labelMedium\">\n        {openingProps.text}\n      </Text>\n    </View>\n  )\n}\n\nexport default StoreOpening\n","import { Image, ImageBackground } from 'expo-image'\nimport { View } from 'react-native'\nimport { Avatar, Card } from 'react-native-paper'\n\nimport type { Store } from '../../api/types'\nimport { SpacingBase } from '../../constants'\nimport { useStyles } from '../../utils'\nimport RetailerDistance from '../RetailerDistance'\nimport StoreOpening from '../StoreOpening'\n\nexport interface StoreCardProps {\n  id: Store['id']\n  address: Store['address']\n  city: Store['city']\n  retailer: Store['retailer_name']\n  distance: Store['_distance']\n  imgSource: Store['retailer_thumb_url']\n  isOpen?: Store['_isOpen']\n  flat?: boolean\n  onPress?: (id: Store['id']) => void\n  onLongPress?: (id: Store['id']) => void\n}\n\nexport const StoreCard = ({\n  id,\n  address,\n  city,\n  retailer,\n  distance,\n  flat,\n  imgSource,\n  isOpen,\n  onPress,\n  onLongPress,\n}: StoreCardProps) => {\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      cardContentStyle: {\n        flexDirection: 'row',\n      },\n      logoContainer: {\n        justifyContent: 'center',\n        padding: SpacingBase,\n        backgroundColor: colors.background,\n        borderTopLeftRadius: roundness * 3,\n        borderBottomLeftRadius: roundness * 3,\n        overflow: 'hidden',\n      },\n      bgImage: {\n        opacity: 0.25,\n      },\n      imageContainer: {\n        width: SpacingBase * 6.5,\n        height: SpacingBase * 6.5,\n        padding: 2,\n        backgroundColor: 'white',\n        borderRadius: SpacingBase * 3.25,\n        overflow: 'hidden',\n        borderWidth: 3,\n        borderColor: colors.secondaryContainer,\n      },\n      image: {\n        width: SpacingBase * 6.5 - 10,\n        height: SpacingBase * 6.5 - 10,\n      },\n      avatar: {\n        backgroundColor: colors.secondaryContainer,\n        color: colors.onSecondaryContainer,\n      },\n      infoContainer: {\n        flex: 1,\n        paddingBottom: SpacingBase * 2,\n        minHeight: 108,\n      },\n      content: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 'auto',\n      },\n    }),\n    [],\n  )\n\n  return (\n    <Card\n      elevation={flat ? 0 : 1}\n      onPress={() => (onPress ? onPress(id) : null)}\n      onLongPress={() => (onLongPress ? onLongPress(id) : null)}\n      contentStyle={styles.cardContentStyle}\n    >\n      <ImageBackground\n        style={styles.logoContainer}\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        source={require('../../assets/images/map-mini-pink.png')}\n        imageStyle={styles.bgImage}\n      >\n        {imgSource ? (\n          <View style={styles.imageContainer}>\n            <Image style={styles.image} contentFit=\"contain\" source={imgSource} />\n          </View>\n        ) : (\n          <Avatar.Icon style={styles.avatar} size={SpacingBase * 5} icon=\"store\" />\n        )}\n      </ImageBackground>\n      <View style={styles.infoContainer}>\n        <Card.Title\n          title={address}\n          titleNumberOfLines={1}\n          subtitleNumberOfLines={1}\n          subtitle={city}\n        />\n        <Card.Content style={styles.content}>\n          {retailer && <RetailerDistance retailer={retailer} distance={distance} />}\n          {isOpen !== undefined && <StoreOpening isOpen={isOpen} />}\n        </Card.Content>\n      </View>\n    </Card>\n  )\n}\n\nexport default StoreCard\n","import { StyleSheet } from 'react-native'\nimport { ActivityIndicator, Card, useTheme } from 'react-native-paper'\n\nimport { SpacingBase } from '../../constants'\n\nconst styles = StyleSheet.create({\n  contentStyle: {\n    height: 108,\n    justifyContent: 'center',\n  },\n})\n\nexport const StoreCardPlaceholder = () => {\n  const { colors } = useTheme()\n  return (\n    <Card contentStyle={styles.contentStyle}>\n      <ActivityIndicator color={colors.secondaryContainer} size={SpacingBase * 4} />\n    </Card>\n  )\n}\n\nexport default StoreCardPlaceholder\n","import { useLinkProps } from '@react-navigation/native'\nimport { memo, useCallback } from 'react'\n\nimport type { Store } from '../../api/types'\nimport type { CountryCode } from '../../navigation/types'\nimport { openCatalogueStoreDialog, useAppDispatch } from '../../redux'\nimport { StoreCard } from '../StoreCard'\n\nexport interface StoresListItemProps {\n  store: Store\n  countryCode: CountryCode\n}\n\nexport const StoresListItem = memo(\n  ({ store, countryCode }: StoresListItemProps) => {\n    const dispatch = useAppDispatch()\n    const { onPress } = useLinkProps({\n      to: { screen: 'StoreDetail', params: { countryCode, id: store.id! } },\n    })\n\n    const handleOnLongPress = useCallback(() => {\n      dispatch(openCatalogueStoreDialog({ id: store.id!, type: 'store' }))\n    }, [dispatch, store.id])\n\n    return (\n      <StoreCard\n        id={store.id}\n        address={store.address}\n        city={store.city}\n        retailer={store.retailer_name}\n        distance={store._distance}\n        imgSource={store.retailer_thumb_url}\n        onPress={() => onPress()}\n        onLongPress={handleOnLongPress}\n        isOpen={store._isOpen}\n      />\n    )\n  },\n  (prevProps, nextProps) => {\n    return prevProps.store.id === nextProps.store.id\n  },\n)\n\nexport default StoresListItem\n","import { useEffect } from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Card } from 'react-native-paper'\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n})\n\nexport const CataloguesListAd = () => {\n  useEffect(() => {\n    // @ts-expect-error: adsbygoogle doesn't exist in window\n    // eslint-disable-next-line\n    ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n  }, [])\n\n  return (\n    <Card style={styles.main}>\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: 'block' }}\n        data-ad-slot={process.env.EXPO_PUBLIC_ADSENSE_ADSLOT_CATALOGUE_CARD}\n        data-ad-format=\"rectangle\"\n        data-full-width-responsive=\"true\"\n      />\n    </Card>\n  )\n}\n\nexport default CataloguesListAd\n","export const StoresListAd = () => null\n\nexport default StoresListAd\n","export const StoreDetailAd = () => null\n\nexport default StoreDetailAd\n","import { useCallback } from 'react'\nimport type { FlatListProps, ListRenderItem, ListRenderItemInfo } from 'react-native'\nimport { Platform, View } from 'react-native'\nimport { FlatList } from 'react-native-gesture-handler'\n\nimport StoresListItem from './StoresListItem'\nimport type { Store } from '../../api/types'\nimport { SpacingBase } from '../../constants'\nimport { useAppSelector } from '../../redux'\nimport { useStyles } from '../../utils'\nimport { StoresListAd } from '../Ads'\nimport { StoreCardPlaceholder } from '../StoreCard'\n\nexport interface StoresListProps {\n  stores: Store[]\n  contentContainerStyle?: FlatListProps<Store>['contentContainerStyle']\n  vertical?: boolean\n  showAds?: boolean\n}\n\nconst ListEmptyComponent = ({ style, flat }: { style: object; flat?: boolean }) => {\n  return Array.from({\n    length: 20,\n  }).map((_, index) => (\n    <View key={index} style={style}>\n      <StoreCardPlaceholder />\n    </View>\n  ))\n}\n\nexport const StoresList = ({\n  stores,\n  contentContainerStyle,\n  vertical,\n  showAds,\n}: StoresListProps) => {\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n\n  const styles = useStyles(\n    () => ({\n      storesList: {\n        paddingLeft: vertical ? SpacingBase * 2 : 0,\n        paddingRight: vertical ? SpacingBase * 2 : 0,\n        paddingTop: vertical ? SpacingBase : 0, // for the item shadow\n        paddingBottom: vertical ? 0 : SpacingBase, // for the item shadow\n      },\n      storesItem: {\n        marginRight: vertical ? 0 : SpacingBase * 2,\n        marginBottom: vertical ? SpacingBase * 2 : 0,\n        width: vertical ? 'auto' : 304,\n      },\n    }),\n    [vertical],\n  )\n\n  const handleRenderItem: ListRenderItem<Store> = useCallback(\n    ({ item, index }: ListRenderItemInfo<Store>) => {\n      return (\n        <View style={styles.storesItem}>\n          <StoresListItem countryCode={countryCode} store={item} />\n        </View>\n      )\n    },\n    [countryCode, styles.storesItem],\n  )\n\n  return (\n    <FlatList\n      keyExtractor={(item) => item.id!}\n      data={stores}\n      renderItem={handleRenderItem}\n      horizontal={!vertical}\n      ListEmptyComponent={<ListEmptyComponent style={styles.storesItem} />}\n      contentContainerStyle={[styles.storesList, contentContainerStyle]}\n      ItemSeparatorComponent={Platform.OS !== 'web' && showAds ? StoresListAd : undefined}\n    />\n  )\n}\n\nexport default StoresList\n","import { Icon, List } from 'react-native-paper'\n\nimport type { Store } from '../../api/types'\nimport { Copies, SpacingBase } from '../../constants'\nimport { useStyles } from '../../utils'\nimport { StoresList } from '../StoresList'\n\nexport interface CatalogueDetailSheetProps {\n  contentColor?: string\n  onFavourite: () => void\n  onChangeDirection?: () => void\n  isFavourite: boolean\n  isHorizontal?: boolean\n  stores: Store[]\n}\n\nexport const CatalogueDetailSheet = ({\n  contentColor,\n  onFavourite,\n  onChangeDirection,\n  isFavourite,\n  isHorizontal,\n  stores,\n}: CatalogueDetailSheetProps) => {\n  const { add_to_favoutites, remove_from_favourites, swipe_horizontally, swipe_vertically } = Copies\n\n  const styles = useStyles(\n    () => ({\n      storesContainer: {\n        paddingLeft: SpacingBase * 2,\n      },\n      listItem: {\n        paddingLeft: SpacingBase * 2,\n        paddingRight: SpacingBase * 2,\n      },\n      title: {\n        color: contentColor,\n      },\n    }),\n    [contentColor],\n  )\n\n  return (\n    <>\n      {stores.length > 0 && (\n        <>\n          <List.Subheader>{Copies.stores}</List.Subheader>\n          <StoresList stores={stores} contentContainerStyle={styles.storesContainer} />\n        </>\n      )}\n      <List.Section title={Copies.catalogue}>\n        <List.Item\n          // eslint-disable-next-line camelcase\n          title={isFavourite ? remove_from_favourites : add_to_favoutites}\n          left={() => (\n            <Icon\n              color={contentColor}\n              source={isFavourite ? 'star' : 'star-outline'}\n              size={SpacingBase * 3}\n            />\n          )}\n          onPress={onFavourite}\n          style={styles.listItem}\n          titleStyle={styles.title}\n        />\n        {isHorizontal && onChangeDirection && (\n          <List.Item\n            // eslint-disable-next-line camelcase\n            title={isHorizontal ? swipe_vertically : swipe_horizontally}\n            left={() => (\n              <Icon\n                color={contentColor}\n                source={isHorizontal ? 'pan-vertical' : 'pan-horizontal'}\n                size={SpacingBase * 3}\n              />\n            )}\n            onPress={onChangeDirection}\n            style={styles.listItem}\n            titleStyle={styles.title}\n          />\n        )}\n      </List.Section>\n    </>\n  )\n}\n\nexport default CatalogueDetailSheet\n","import type { BottomSheetBackdropProps } from '@gorhom/bottom-sheet'\nimport BottomSheetLib, {\n  BottomSheetBackdrop,\n  BottomSheetHandle,\n  BottomSheetView,\n} from '@gorhom/bottom-sheet'\nimport { useCallback, useRef, useState } from 'react'\nimport { Button, useTheme } from 'react-native-paper'\n\nimport { BottomSheetHandleHeight, SpacingBase } from '../../constants'\nimport { useBottomSheetBackHandler, useStyles } from '../../utils'\n\nexport interface BottomSheetProps {\n  children: React.ReactNode\n  backgroundColor?: string\n  hasBackdrop?: boolean\n  snapPoints?: (string | number)[]\n  index?: number\n  handleComponentText?: string\n}\n\nexport const BottomSheet = ({\n  children,\n  backgroundColor,\n  hasBackdrop,\n  snapPoints,\n  index,\n  handleComponentText,\n}: BottomSheetProps) => {\n  const bottomSheetRef = useRef<BottomSheetLib>(null)\n  const [currentIndex, setCurrentIndex] = useState(index ?? 0)\n  const { colors } = useTheme()\n  const { handleSheetPositionChange } = useBottomSheetBackHandler(bottomSheetRef)\n\n  const renderBackdrop = useCallback(\n    (props: BottomSheetBackdropProps) => (\n      <BottomSheetBackdrop\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n        appearsOnIndex={1}\n        disappearsOnIndex={0}\n        pressBehavior=\"collapse\"\n      />\n    ),\n    [],\n  )\n\n  const styles = useStyles(\n    () => ({\n      main: {\n        backgroundColor,\n      },\n      contentContainer: {},\n      customHandle: {\n        padding: SpacingBase,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }),\n    [backgroundColor],\n  )\n\n  const handleOnChange = useCallback(\n    (index: number) => {\n      setCurrentIndex(index)\n      handleSheetPositionChange(index)\n    },\n    [handleSheetPositionChange],\n  )\n\n  const handleOnHandlePress = useCallback(() => {\n    currentIndex === 0 ? bottomSheetRef.current?.expand() : bottomSheetRef.current?.collapse()\n  }, [currentIndex])\n\n  return (\n    <BottomSheetLib\n      ref={bottomSheetRef}\n      index={index ?? 0}\n      snapPoints={snapPoints ?? [BottomSheetHandleHeight, '50%']}\n      backgroundStyle={styles.main}\n      handleHeight={BottomSheetHandleHeight}\n      backdropComponent={hasBackdrop ? renderBackdrop : undefined}\n      onChange={handleOnChange}\n      handleComponent={\n        handleComponentText\n          ? () => (\n              <Button\n                textColor={colors.onSurfaceVariant}\n                icon={currentIndex === 0 ? 'chevron-up' : 'chevron-down'}\n                onPress={handleOnHandlePress}\n                labelStyle={{ marginTop: SpacingBase - 2 }}\n              >\n                {handleComponentText}\n              </Button>\n            )\n          : BottomSheetHandle\n      }\n    >\n      <BottomSheetView style={styles.contentContainer}>{children}</BottomSheetView>\n    </BottomSheetLib>\n  )\n}\n\nexport default BottomSheet\n","import { useLinkProps, useNavigation } from '@react-navigation/native'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Button, Dialog, Divider, Icon, List } from 'react-native-paper'\n\nimport { Copies, SpacingBase } from '../constants'\nimport {\n  closeCatalogueStoreDialog,\n  deleteFavouriteCatalogue,\n  deleteFavouriteStore,\n  setFavouriteCatalogue,\n  setFavouriteStore,\n  useAppDispatch,\n  useAppSelector,\n} from '../redux'\n\nconst styles = StyleSheet.create({\n  actions: {\n    marginTop: SpacingBase * 2,\n  },\n})\n\nconst CatalogueStoreDialog = () => {\n  const navigation = useNavigation()\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n  const { favourite_catalogues, favourite_stores } = useAppSelector((state) => state.user)\n  const { open, id, type } = useAppSelector((state) => state.ui.catalogueStoreDialog)\n  const isCatalogue = useMemo(() => type === 'catalogue', [type])\n  const isFav = useMemo(\n    () =>\n      id && isCatalogue\n        ? favourite_catalogues.includes(id)\n        : id && !isCatalogue\n          ? favourite_stores.includes(id)\n          : false,\n    [favourite_catalogues, favourite_stores, id, isCatalogue],\n  )\n  const dispatch = useAppDispatch()\n\n  const { onPress: onReadPress } = useLinkProps({\n    to: {\n      screen: isCatalogue ? 'CatalogueDetail' : 'StoreDetail',\n      params: { countryCode, id: id ?? '' },\n    },\n  })\n\n  const handleOnFavPress = useCallback(async () => {\n    if (isFav) {\n      isCatalogue ? dispatch(deleteFavouriteCatalogue(id!)) : dispatch(deleteFavouriteStore(id!))\n    } else {\n      isCatalogue\n        ? await dispatch(setFavouriteCatalogue(id!))\n        : await dispatch(setFavouriteStore(id!))\n    }\n  }, [dispatch, id, isCatalogue, isFav])\n\n  const handleOnClose = useCallback(() => {\n    dispatch(closeCatalogueStoreDialog())\n  }, [dispatch])\n\n  useEffect(() => {\n    navigation.addListener('state', handleOnClose)\n  }, [handleOnClose, navigation])\n\n  return (\n    <Dialog visible={open} onDismiss={handleOnClose}>\n      <List.Item\n        title={isFav ? Copies.remove_from_favourites : Copies.add_to_favoutites}\n        onPress={handleOnFavPress}\n        right={() => <Icon size={SpacingBase * 3} source={isFav ? 'star' : 'star-outline'} />}\n      />\n      <Divider />\n      <List.Item\n        title={isCatalogue ? Copies.read_catalogue : Copies.open_store_detail}\n        onPress={onReadPress}\n        right={() => (\n          <Icon\n            size={SpacingBase * 3}\n            source={isCatalogue ? 'newspaper-variant-outline' : 'store-outline'}\n          />\n        )}\n      />\n      <Dialog.Actions style={styles.actions}>\n        <Button onPress={handleOnClose}>{Copies.close}</Button>\n      </Dialog.Actions>\n    </Dialog>\n  )\n}\n\nexport default CatalogueStoreDialog\n","import { Image } from 'expo-image'\nimport type { FallbackProps } from 'react-error-boundary'\nimport { StyleSheet, View } from 'react-native'\nimport { Appbar, Button, Text, ThemeProvider } from 'react-native-paper'\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context'\n\nimport { Copies, SpacingBase } from '../constants'\nimport { LightTheme } from '../utils'\n\nexport interface ErrorFallbackProps extends FallbackProps {\n  error: { message: object | string }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  main: {\n    padding: SpacingBase * 4,\n    gap: SpacingBase * 4,\n  },\n  image: {\n    height: 40,\n    width: 153,\n  },\n  text: {\n    textAlign: 'center',\n  },\n})\n\n// TODO: add \"error\" to props and send it to an error logging service\nconst ErrorFallback = ({ resetErrorBoundary }: ErrorFallbackProps) => {\n  return (\n    <SafeAreaProvider>\n      <ThemeProvider theme={LightTheme}>\n        <Appbar.Header mode=\"center-aligned\">\n          <Appbar.Content\n            title={\n              <Image\n                priority=\"high\"\n                style={styles.image}\n                contentFit=\"contain\"\n                alt={process.env.EXPO_PUBLIC_APP_NAME}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                source={require('../assets/images/logo-2.png')}\n              />\n            }\n          />\n        </Appbar.Header>\n        <SafeAreaView style={styles.container}>\n          <View style={styles.main}>\n            <Text style={styles.text} variant=\"titleLarge\">\n              {Copies.something_went_wrong}\n            </Text>\n            <Text style={styles.text} variant=\"bodyLarge\">\n              {Copies.generic_error_text}\n            </Text>\n            <Button mode=\"contained-tonal\" onPress={() => resetErrorBoundary()}>\n              {Copies.retry}\n            </Button>\n          </View>\n        </SafeAreaView>\n      </ThemeProvider>\n    </SafeAreaProvider>\n  )\n}\n\nexport default ErrorFallback\n","import { useLinkProps } from '@react-navigation/native'\nimport type { StackHeaderProps } from '@react-navigation/stack'\nimport { Image } from 'expo-image'\nimport { useCallback, useMemo } from 'react'\nimport { Platform, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Appbar, Text } from 'react-native-paper'\n\nimport type { CitySlug, CountryCode } from '../navigation/types'\nimport { useAppSelector } from '../redux'\n\nexport interface HeaderProps extends StackHeaderProps {\n  children?: React.ReactNode\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 40,\n    width: 153,\n  },\n})\n\nconst Header = ({ navigation, route, options, children }: HeaderProps) => {\n  const isCatalogueDetail = useMemo(() => route.name === 'CatalogueDetail', [route.name])\n  const isStoreDetail = useMemo(() => route.name === 'StoreDetail', [route.name])\n  const isGeo = useMemo(() => route.name === 'Geo', [route.name])\n  const { countryCode, citySlug } = useAppSelector((store) => store.app)\n  const { onPress } = useLinkProps({\n    to: {\n      screen: 'HomeTabs',\n      params: {\n        screen: 'Catalogues',\n        params: citySlug ? { countryCode, citySlug } : { countryCode },\n      },\n    },\n  })\n\n  const showBack = useMemo(\n    // show back arrow when land directly to a detail\n    () =>\n      navigation.canGoBack() ||\n      (!navigation.canGoBack() && (isCatalogueDetail || isStoreDetail || isGeo)),\n    [isCatalogueDetail, isGeo, isStoreDetail, navigation],\n  )\n\n  const handleOnPressBack = useCallback(() => {\n    const { countryCode, citySlug } = route.params as {\n      countryCode: CountryCode\n      citySlug: CitySlug\n    }\n    navigation.canGoBack()\n      ? navigation.goBack()\n      : navigation.replace('HomeTabs', {\n          screen: 'Catalogues',\n          params: citySlug ? { countryCode, citySlug } : { countryCode },\n        })\n  }, [navigation, route.params])\n\n  return (\n    <Appbar.Header mode=\"center-aligned\">\n      {showBack && <Appbar.BackAction onPress={handleOnPressBack} />}\n      <Appbar.Content\n        title={\n          Platform.OS !== 'web' && typeof options.headerTitle === 'string' ? (\n            <Text variant=\"bodyLarge\">{options.headerTitle}</Text>\n          ) : (\n            <TouchableOpacity onPress={() => onPress()}>\n              <Image\n                priority=\"high\"\n                style={styles.image}\n                contentFit=\"contain\"\n                alt={process.env.EXPO_PUBLIC_APP_NAME}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                source={require('../assets/images/logo-2.png')}\n              />\n            </TouchableOpacity>\n          )\n        }\n      />\n      {children}\n    </Appbar.Header>\n  )\n}\n\nexport default Header\n","import { A } from '@expo/html-elements'\nimport type { StackScreenProps } from '@react-navigation/stack'\nimport { Image } from 'expo-image'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { StyleSheet, View } from 'react-native'\nimport { ActivityIndicator, Appbar, Text, useTheme } from 'react-native-paper'\n\nimport { useGetCataloguesByIdsQuery, useGetNearbyStoresByCatalogueIdQuery } from '../api'\nimport type { Catalogue } from '../api/types'\nimport { BottomSheet, CatalogueDetailSheet } from '../components/BottomSheets'\nimport CatalogueStoreDialog from '../components/CatalogueStoreDialog'\nimport ErrorFallback from '../components/ErrorFallback'\nimport type { HeaderProps } from '../components/Header'\nimport Header from '../components/Header'\nimport { BottomSheetHandleHeight, Copies, ExtraColors, SpacingBase } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\nimport {\n  deleteFavouriteCatalogue,\n  setFavouriteCatalogue,\n  useAppDispatch,\n  useAppSelector,\n} from '../redux'\n\nexport type CatalogueDetailScreenProps = StackScreenProps<\n  RootStackParamList,\n  'CatalogueDetail',\n  'RootStack'\n>\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cover: {\n    width: '100%',\n    height: 350,\n    marginBottom: SpacingBase * 2,\n  },\n  badge: {\n    marginTop: SpacingBase * 2,\n    width: 215.33,\n    height: 83.33,\n  },\n})\n\nexport const CatalogueDetailScreen = ({ route, navigation }: CatalogueDetailScreenProps) => {\n  const [catalogue, setCatalogue] = useState<Catalogue | null>(null)\n  const { id } = route.params\n  const { location, favourite_catalogues } = useAppSelector((state) => state.user)\n  const isFav = useMemo(\n    () => (catalogue?.id ? favourite_catalogues.includes(catalogue.id) : false),\n    [catalogue, favourite_catalogues],\n  )\n  const dispatch = useAppDispatch()\n  const { colors } = useTheme()\n\n  const { data: catalogues, error, isLoading } = useGetCataloguesByIdsQuery([id])\n\n  const { data: stores = [], error: storesError } = useGetNearbyStoresByCatalogueIdQuery(\n    {\n      id,\n      // @ts-expect-error: skip\n      latitude: location?.latitude,\n      // @ts-expect-error: skip\n      longitude: location?.longitude,\n    },\n    { skip: !(catalogue && location) },\n  )\n\n  if (error || storesError) {\n    throw new Error(JSON.stringify(error || storesError))\n  }\n\n  const handleOnPressFav = useCallback(async () => {\n    if (!catalogue) {\n      return\n    }\n    if (isFav) {\n      dispatch(deleteFavouriteCatalogue(catalogue.id!))\n    } else {\n      await dispatch(setFavouriteCatalogue(catalogue.id!))\n    }\n  }, [catalogue, dispatch, isFav])\n\n  const renderHeader = useCallback(\n    (props: HeaderProps) => {\n      return (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        <Header {...props}>\n          <Appbar.Action\n            size={SpacingBase * 4}\n            onPress={handleOnPressFav}\n            color={ExtraColors.gold}\n            icon={isFav ? 'star' : 'star-outline'}\n          />\n        </Header>\n      )\n    },\n    [handleOnPressFav, isFav],\n  )\n\n  useEffect(() => {\n    if (catalogues) {\n      setCatalogue(catalogues[0])\n      navigation.setOptions({\n        header: renderHeader,\n        headerTitle: `${Copies.catalogue} ${catalogues[0]._retailer_name} - ${catalogues[0].title}`,\n        title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.catalogue} ${catalogues[0]._retailer_name}, ${catalogues[0].title}`,\n      })\n    }\n  }, [catalogues, navigation, renderHeader])\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      {isLoading || !catalogue ? (\n        <View style={styles.main}>\n          <ActivityIndicator color={colors.secondaryContainer} size=\"large\" />\n        </View>\n      ) : (\n        <View style={styles.main}>\n          <Image source={catalogue.thumb_url} contentFit=\"contain\" style={styles.cover} />\n          <Text variant=\"bodyLarge\">{Copies.download_app_to_see_catalogue_1}</Text>\n          <A href={process.env.EXPO_PUBLIC_GOOGLE_PLAY_URL} target=\"_blank\">\n            <Text variant=\"bodyLarge\">{Copies.download_app_to_see_catalogue_2}</Text>\n          </A>\n          <A href={process.env.EXPO_PUBLIC_GOOGLE_PLAY_URL} target=\"_blank\">\n            <Image\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              source={require('../assets/images/google-play-badge.png')}\n              contentFit=\"contain\"\n              style={styles.badge}\n            />\n          </A>\n        </View>\n      )}\n      <BottomSheet\n        backgroundColor={colors.secondaryContainer}\n        snapPoints={\n          stores.length > 0\n            ? [BottomSheetHandleHeight * 1.5, 380]\n            : [BottomSheetHandleHeight * 1.5, 200]\n        }\n        handleComponentText={Copies.stores_and_settings}\n      >\n        <CatalogueDetailSheet\n          stores={stores}\n          contentColor={colors.onSecondaryContainer}\n          onFavourite={handleOnPressFav}\n          isFavourite={isFav}\n        />\n      </BottomSheet>\n      <CatalogueStoreDialog />\n    </ErrorBoundary>\n  )\n}\n\nexport default CatalogueDetailScreen\n","import { useMemo } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Icon, Text } from 'react-native-paper'\n\nimport type { Catalogue } from '../api/types'\nimport { ExtraColors, SpacingBase } from '../constants'\n\nexport interface CatalogueExpirationProps {\n  expiration: Catalogue['_expiration_label']\n  urgencyLevel: Catalogue['_expiration_urgency_level']\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  text: {\n    marginLeft: SpacingBase / 2,\n  },\n})\n\nconst CatalogueExpiration = ({ expiration, urgencyLevel }: CatalogueExpirationProps) => {\n  const expirationProps = useMemo(() => {\n    switch (urgencyLevel) {\n      case -1:\n        return { icon: 'eye-outline', color: ExtraColors.forestgreen }\n      case 0:\n        return { icon: 'calendar-outline', color: ExtraColors.forestgreen }\n      case 1:\n        return { icon: 'calendar-clock-outline', color: ExtraColors.orange }\n      case 2:\n        return { icon: 'alarm', color: ExtraColors.crimson }\n      case 100:\n        return { icon: 'clock-remove-outline', color: ExtraColors.gray }\n      default:\n        return { icon: 'calendar-outline' }\n    }\n  }, [urgencyLevel])\n\n  return (\n    <View style={styles.main}>\n      <Icon color={expirationProps.color} size={SpacingBase * 2} source={expirationProps.icon} />\n      <Text style={styles.text} variant=\"labelMedium\">\n        {expiration}\n      </Text>\n    </View>\n  )\n}\n\nexport default CatalogueExpiration\n","import { Image } from 'expo-image'\nimport { View } from 'react-native'\nimport type { CardProps } from 'react-native-paper'\nimport { Card } from 'react-native-paper'\n\nimport type { Catalogue } from '../../api/types'\nimport { SpacingBase } from '../../constants'\nimport { useStyles } from '../../utils'\nimport CatalogueExpiration from '../CatalogueExpiration'\nimport RetailerDistance from '../RetailerDistance'\n\nexport interface CatalogueCardProps {\n  title: string\n  expiration: string\n  retailer: string\n  distance: string\n  urgencyLevel: Catalogue['_expiration_urgency_level']\n  onPress: CardProps['onPress']\n  onLongPress: CardProps['onLongPress']\n  imgSource: string\n}\n\nexport const CatalogueCard = ({\n  title,\n  expiration,\n  retailer,\n  distance,\n  urgencyLevel,\n  imgSource,\n  onPress,\n  onLongPress,\n}: CatalogueCardProps) => {\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      titleContainer: {\n        paddingLeft: SpacingBase,\n        paddingTop: SpacingBase,\n      },\n      title: {\n        paddingRight: SpacingBase,\n      },\n      content: {\n        paddingLeft: SpacingBase,\n        paddingRight: SpacingBase,\n        paddingTop: SpacingBase,\n        paddingBottom: SpacingBase,\n      },\n      cover: {\n        width: '100%',\n        height: 195,\n        backgroundColor: colors.secondaryContainer,\n        borderRadius: roundness * 3,\n      },\n      info: {\n        paddingTop: SpacingBase,\n        paddingLeft: SpacingBase,\n        paddingRight: SpacingBase,\n      },\n    }),\n    [],\n  )\n\n  return (\n    <Card onPress={onPress} onLongPress={onLongPress}>\n      <Image source={imgSource} style={styles.cover} contentFit=\"contain\" />\n      <View style={styles.info}>\n        {retailer.length > 0 && (\n          <RetailerDistance spaceBetween retailer={retailer} distance={distance} />\n        )}\n      </View>\n      <Card.Title\n        style={styles.titleContainer}\n        title={title}\n        titleNumberOfLines={2}\n        titleStyle={styles.title}\n        titleVariant=\"bodyMedium\"\n      />\n      <Card.Content style={styles.content}>\n        <CatalogueExpiration expiration={expiration} urgencyLevel={urgencyLevel} />\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default CatalogueCard\n","import { View } from 'react-native'\nimport { ActivityIndicator, Card, useTheme } from 'react-native-paper'\n\nimport { useStyles } from '../../utils'\n\nexport const CatalogueCardPlaceholder = () => {\n  const { colors } = useTheme()\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      main: {\n        height: 305,\n      },\n      cover: {\n        justifyContent: 'center',\n        height: 195,\n        backgroundColor: colors.secondaryContainer,\n        borderRadius: roundness * 3,\n      },\n    }),\n    [],\n  )\n\n  return (\n    <Card style={styles.main}>\n      <View style={styles.cover}>\n        <ActivityIndicator color={colors.onSecondaryContainer} size=\"large\" />\n      </View>\n    </Card>\n  )\n}\n\nexport default CatalogueCardPlaceholder\n","import { useCallback } from 'react'\nimport type { ListRenderItem } from 'react-native'\nimport { StyleSheet, FlatList, View } from 'react-native'\n\nimport { SpacingBase } from '../../constants'\nimport { useBreakpointsValue } from '../../utils'\nimport { CatalogueCardPlaceholder } from '../CatalogueCard'\n\nexport interface CataloguePlaceholder {\n  _hasAdNext: boolean\n}\n\nexport interface CataloguesGridPlaceholderProps {\n  items: CataloguePlaceholder[]\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    paddingRight: SpacingBase * 2,\n    marginBottom: SpacingBase * 2,\n  },\n  item: {\n    flex: 1,\n    marginLeft: SpacingBase * 2,\n  },\n})\n\nexport const CataloguesGridPlaceholder = ({ items }: CataloguesGridPlaceholderProps) => {\n  const numColumns =\n    (useBreakpointsValue({ xs: 2, sm: 3, md: 4, lg: 5, xl: 6, xxl: 7 }) as number) || 2\n\n  const renderItem: ListRenderItem<unknown> = useCallback(() => {\n    return (\n      <View style={styles.item}>\n        <CatalogueCardPlaceholder />\n      </View>\n    )\n  }, [])\n\n  return (\n    <FlatList\n      numColumns={numColumns}\n      key={numColumns}\n      data={items}\n      renderItem={renderItem}\n      columnWrapperStyle={styles.row}\n    />\n  )\n}\n\nexport default CataloguesGridPlaceholder\n","import { Helmet } from 'react-helmet'\nimport { Platform } from 'react-native'\n\nexport interface HeadPreloadImgProps {\n  imgUrl: string\n  imgType?: string | undefined\n}\n\nconst HeadPreloadImg = ({ imgUrl, imgType }: HeadPreloadImgProps) => {\n  if (Platform.OS !== 'web') {\n    return null\n  }\n\n  return (\n    // TODO: see if Helmet is really needed or we got other options\n    <Helmet>\n      <link\n        rel=\"preload\"\n        // eslint-disable-next-line react/no-unknown-property\n        fetchPriority=\"high\"\n        as=\"image\"\n        href={imgUrl}\n        type={imgType}\n      />\n    </Helmet>\n  )\n}\n\nexport default HeadPreloadImg\n","import { useLinkProps } from '@react-navigation/native'\nimport { memo, useCallback } from 'react'\nimport type { ListRenderItemInfo } from 'react-native'\n\nimport type { Catalogue } from '../../api/types'\nimport type { CountryCode } from '../../navigation/types'\nimport { openCatalogueStoreDialog, useAppDispatch } from '../../redux'\nimport { CatalogueCard } from '../CatalogueCard'\nimport HeadPreloadImg from '../HeadPreloadImg'\n\nexport interface CataloguesListItemProps {\n  item: ListRenderItemInfo<Catalogue>['item']\n  index: ListRenderItemInfo<Catalogue>['index']\n  countryCode: CountryCode\n}\n\nexport const CataloguesListItem = memo(\n  ({ item, index, countryCode }: CataloguesListItemProps) => {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const imgUrl = item.thumb_url ?? (require('../../assets/images/adaptive-icon.png') as string)\n    const dispatch = useAppDispatch()\n    const { onPress } = useLinkProps({\n      to: { screen: 'CatalogueDetail', params: { countryCode, id: item.id! } },\n    })\n\n    const handleOnLongPress = useCallback(() => {\n      dispatch(openCatalogueStoreDialog({ id: item.id!, type: 'catalogue' }))\n    }, [dispatch, item.id])\n\n    return (\n      <>\n        {index <= 1 && <HeadPreloadImg imgUrl={imgUrl} imgType=\"image/webp\" />}\n        <CatalogueCard\n          title={item.title ?? ''}\n          expiration={item._expiration_label}\n          retailer={item._retailer_name}\n          distance={item._distance}\n          urgencyLevel={item._expiration_urgency_level}\n          imgSource={imgUrl}\n          onPress={onPress}\n          onLongPress={handleOnLongPress}\n        />\n      </>\n    )\n  },\n  (prevProps, nextProps) => {\n    return prevProps.index === nextProps.index\n  },\n)\n\nexport default CataloguesListItem\n","import { useCallback } from 'react'\nimport type { FlatListProps, ListRenderItem, ListRenderItemInfo } from 'react-native'\nimport { StyleSheet, FlatList, View } from 'react-native'\n\nimport CataloguesListItem from './CataloguesListItem'\nimport type { Catalogue } from '../../api/types'\nimport { SpacingBase } from '../../constants'\nimport { useAppSelector } from '../../redux'\nimport { CatalogueCardPlaceholder } from '../CatalogueCard'\n\nexport interface CataloguesListProps {\n  catalogues: Catalogue[]\n  contentContainerStyle?: FlatListProps<Catalogue>['contentContainerStyle']\n}\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    paddingBottom: SpacingBase * 2,\n  },\n  item: {\n    width: 155.5 - SpacingBase, // width of an item in two columns grid - SpacingBase to see the third item\n    marginRight: SpacingBase * 2,\n  },\n})\n\nconst ListEmptyComponent = () => {\n  return Array.from({\n    length: 10,\n  }).map((_, index) => (\n    <View key={index} style={styles.item}>\n      <CatalogueCardPlaceholder />\n    </View>\n  ))\n}\n\nexport const CataloguesList = ({ catalogues, contentContainerStyle }: CataloguesListProps) => {\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n\n  const handleRenderItem: ListRenderItem<Catalogue> = useCallback(\n    ({ item, index }: ListRenderItemInfo<Catalogue>) => {\n      return (\n        <View style={styles.item}>\n          <CataloguesListItem item={item} index={index} countryCode={countryCode} />\n        </View>\n      )\n    },\n    [countryCode],\n  )\n\n  return (\n    <FlatList\n      horizontal\n      data={catalogues}\n      renderItem={handleRenderItem}\n      ListEmptyComponent={ListEmptyComponent}\n      keyExtractor={(item) => item.id!}\n      contentContainerStyle={[styles.contentContainer, contentContainerStyle]}\n    />\n  )\n}\n\nexport default CataloguesList\n","import { useCallback, useMemo } from 'react'\nimport type { FlatListProps, ListRenderItem, ListRenderItemInfo } from 'react-native'\nimport { StyleSheet, FlatList, View, Platform, useWindowDimensions } from 'react-native'\n\nimport CataloguesGridPlaceholder from './CataloguesGridPlaceholder'\nimport type { Catalogue } from '../../api/types'\nimport { SpacingBase } from '../../constants'\nimport { useAppSelector } from '../../redux'\nimport { useBreakpointsValue } from '../../utils'\nimport { CataloguesListAd } from '../Ads'\nimport { CataloguesListItem } from '../CataloguesList'\n\nexport interface CataloguesGridProps {\n  catalogues: Catalogue[]\n  ListHeaderComponent?: React.JSX.Element\n  onRefresh?: FlatListProps<Catalogue>['onRefresh']\n  onScroll?: FlatListProps<Catalogue>['onScroll']\n  refreshing?: FlatListProps<Catalogue>['refreshing']\n  contentContainerStyle?: FlatListProps<Catalogue>['contentContainerStyle']\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    paddingRight: SpacingBase * 2,\n    marginBottom: SpacingBase * 2,\n  },\n  item: {\n    flex: 1,\n    marginLeft: SpacingBase * 2,\n  },\n})\n\nexport const CataloguesGrid = ({\n  catalogues,\n  ListHeaderComponent,\n  onRefresh,\n  refreshing,\n  onScroll,\n  contentContainerStyle,\n}: CataloguesGridProps) => {\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n  const { width: windowWidth } = useWindowDimensions()\n\n  const numColumns =\n    (useBreakpointsValue({ xs: 2, sm: 3, md: 4, lg: 5, xl: 6, xxl: 7 }) as number) || 2\n\n  const maxWidth = useMemo(\n    () => windowWidth / numColumns - SpacingBase * 3,\n    [numColumns, windowWidth],\n  )\n\n  const handleRenderItem: ListRenderItem<Catalogue> = useCallback(\n    ({ item, index }: ListRenderItemInfo<Catalogue>) => {\n      return (\n        <View style={[styles.item, { maxWidth }]}>\n          <CataloguesListItem item={item} index={index} countryCode={countryCode} />\n        </View>\n      )\n    },\n    [countryCode, maxWidth],\n  )\n\n  return (\n    <FlatList\n      numColumns={numColumns}\n      key={numColumns}\n      data={catalogues}\n      renderItem={handleRenderItem}\n      ListHeaderComponent={ListHeaderComponent}\n      ListEmptyComponent={\n        <CataloguesGridPlaceholder\n          items={Array.from({\n            length: parseInt(process.env.EXPO_PUBLIC_CATALOGUES_LIST_LIMIT ?? '40', 10),\n          })}\n        />\n      }\n      ItemSeparatorComponent={Platform.OS !== 'web' ? CataloguesListAd : undefined}\n      columnWrapperStyle={styles.row}\n      keyExtractor={(item) => item.id!}\n      onRefresh={onRefresh}\n      refreshing={refreshing}\n      onScroll={onScroll}\n      contentContainerStyle={contentContainerStyle}\n    />\n  )\n}\n\nexport default CataloguesGrid\n","import { Chip } from 'react-native-paper'\n\nimport type { RetailerFilter } from '../../api/types'\nimport { useStyles } from '../../utils'\n\nexport interface RetailersFilterItemProps {\n  retailer: RetailerFilter\n  selected: boolean\n  onPress: () => void\n  compact?: boolean\n  showSelectedCheck?: boolean\n}\n\nexport const RetailersFilterItem = ({\n  onPress,\n  retailer,\n  selected,\n  compact = true,\n  showSelectedCheck = true,\n}: RetailersFilterItemProps) => {\n  const styles = useStyles(\n    ({ colors }) => ({\n      main: {\n        backgroundColor: selected ? colors.secondaryContainer : colors.surfaceVariant,\n      },\n      text: {\n        color: selected ? colors.onSecondaryContainer : colors.onSurface,\n      },\n    }),\n    [selected],\n  )\n\n  return (\n    <Chip\n      showSelectedCheck={showSelectedCheck}\n      compact={compact}\n      selected={selected}\n      style={styles.main}\n      textStyle={styles.text}\n      onPress={onPress}\n    >\n      {retailer.name}\n    </Chip>\n  )\n}\n\nexport default RetailersFilterItem\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport type { ListRenderItem, ListRenderItemInfo } from 'react-native'\nimport { StyleSheet, View } from 'react-native'\nimport { FlatList } from 'react-native-gesture-handler'\nimport { Text } from 'react-native-paper'\n\nimport RetailersFilterItem from './RetailersFilterItem'\nimport type { RetailerFilter } from '../../api/types'\nimport { Copies, SpacingBase } from '../../constants'\n\nexport interface RetailersFilterProps {\n  retailers: RetailerFilter[]\n  onChange: (retailers: RetailerFilter['id'][]) => void\n  reset?: boolean\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    paddingLeft: SpacingBase * 1.5,\n    marginBottom: SpacingBase * 1.5,\n  },\n  contentContainer: {\n    paddingLeft: SpacingBase * 1.5,\n    paddingBottom: SpacingBase * 2,\n    alignItems: 'center',\n  },\n  itemContainer: {\n    marginRight: SpacingBase,\n  },\n})\n\nexport const RetailersFilter = ({ retailers, onChange, reset }: RetailersFilterProps) => {\n  const [filteredRetailers, setFilteredRetailers] = useState<RetailerFilter['id'][]>([])\n\n  useEffect(() => {\n    if (reset) {\n      setFilteredRetailers([])\n    }\n  }, [reset])\n\n  const handleOnRetailerPress = useCallback(\n    (id: RetailerFilter['id'], selected: boolean) => {\n      if (selected) {\n        const newRetailers = filteredRetailers.filter((retailerId) => id !== retailerId)\n        setFilteredRetailers(newRetailers)\n        onChange(newRetailers)\n      } else {\n        setFilteredRetailers([...filteredRetailers, id])\n        onChange([...filteredRetailers, id])\n      }\n    },\n    [filteredRetailers, onChange],\n  )\n\n  const handleRenderRetailer: ListRenderItem<RetailerFilter> = useCallback(\n    ({ item, index }: ListRenderItemInfo<RetailerFilter>) => {\n      const selected = filteredRetailers.some((id) => item.id === id)\n      return (\n        <View style={styles.itemContainer}>\n          <RetailersFilterItem\n            retailer={item}\n            selected={selected}\n            onPress={() => handleOnRetailerPress(item.id, selected)}\n          />\n        </View>\n      )\n    },\n    [filteredRetailers, handleOnRetailerPress],\n  )\n\n  return (\n    <>\n      <Text style={styles.title} variant=\"labelMedium\">\n        {Copies.filter_stores}\n      </Text>\n      <FlatList\n        data={retailers}\n        renderItem={handleRenderRetailer}\n        keyExtractor={(item) => item.id}\n        horizontal\n        ListEmptyComponent={<View style={{ height: SpacingBase * 4 }} />}\n        contentContainerStyle={styles.contentContainer}\n      />\n    </>\n  )\n}\n\nexport default RetailersFilter\n","import Slider from '@react-native-community/slider'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ScrollView, View, useWindowDimensions } from 'react-native'\nimport { Button, IconButton, Modal, Portal, Text, useTheme } from 'react-native-paper'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\nimport { RetailersFilterItem } from './RetailersFilter'\nimport { useGetNearbyRetailersQuery } from '../api'\nimport type { Retailer, RetailerFilter } from '../api/types'\nimport { Copies, FiltersDefault, SpacingBase } from '../constants'\nimport { useAppSelector } from '../redux'\nimport { useStyles } from '../utils'\n\nexport interface FiltersModalProps {\n  visible: boolean\n  onDismiss: () => void\n  onApply: ({ retailer_ids, distance }: { retailer_ids: string[]; distance: number }) => void\n  onDelete: () => void\n}\n\nconst FiltersModal = ({ visible, onDismiss, onApply, onDelete }: FiltersModalProps) => {\n  const { location, filters } = useAppSelector((state) => state.user)\n  const { width: windowWidth, height: windowHeight } = useWindowDimensions()\n  const insets = useSafeAreaInsets()\n  const { colors } = useTheme()\n\n  const getStepFromDistance = useCallback((distance: number) => {\n    switch (distance) {\n      case 5000:\n        return 0\n      case 10000:\n        return 1\n      case 20000:\n        return 2\n      case 30000:\n        return 3\n      case 50000:\n        return 4\n      default:\n        return 3\n    }\n  }, [])\n\n  const [filteredRetailers, setFilteredRetailers] = useState(filters.retailer_ids)\n  const [sliderStep, setSliderStep] = useState(getStepFromDistance(filters.distance))\n\n  const distance = useMemo(() => {\n    switch (sliderStep) {\n      case 0:\n        return 5000\n      case 1:\n        return 10000\n      case 2:\n        return 20000\n      case 3:\n        return 30000\n      case 4:\n        return 50000\n      default:\n        return 30000\n    }\n  }, [sliderStep])\n\n  const { data: retailers, error } = useGetNearbyRetailersQuery(\n    {\n      // @ts-expect-error: skip\n      latitude: location?.latitude,\n      // @ts-expect-error: skip\n      longitude: location?.longitude,\n      distance,\n    },\n    { skip: !location },\n  )\n\n  if (error) {\n    throw new Error(JSON.stringify(error))\n  }\n\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      contentContainer: {\n        marginLeft: SpacingBase * 2,\n        backgroundColor: colors.background,\n        borderRadius: roundness * 3,\n        width: windowWidth - SpacingBase * 4,\n        height: windowHeight - insets.top - SpacingBase * 4,\n        justifyContent: 'flex-start',\n      },\n      content: {\n        padding: SpacingBase * 2,\n        flex: 1,\n      },\n      header: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      },\n      title: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingLeft: SpacingBase * 6,\n      },\n      distanceContainer: {\n        marginBottom: SpacingBase * 4,\n      },\n      retailersContainer: {\n        flex: 1,\n        marginBottom: SpacingBase * 2,\n      },\n      buttonsContainer: {\n        flexDirection: 'row',\n        marginTop: 'auto',\n        marginLeft: -SpacingBase * 2,\n      },\n      button: {\n        flex: 1,\n        marginLeft: SpacingBase * 2,\n      },\n      retailerChipsContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n      },\n      retailer: {\n        marginBottom: SpacingBase,\n        marginRight: SpacingBase,\n      },\n      subtitle: {\n        marginBottom: SpacingBase * 2,\n      },\n      distanceLabel: {\n        textAlign: 'center',\n        marginTop: SpacingBase * 2,\n      },\n    }),\n    [insets.top, windowHeight, windowWidth],\n  )\n\n  useEffect(() => {\n    setFilteredRetailers(filters.retailer_ids)\n    setSliderStep(getStepFromDistance(filters.distance))\n  }, [filters.distance, filters.retailer_ids, getStepFromDistance])\n\n  const handleOnSliderChange = useCallback((value: number) => {\n    setSliderStep(value)\n  }, [])\n\n  const handleOnRetailerPress = useCallback(\n    (id: RetailerFilter['id'], selected: boolean) => {\n      if (selected) {\n        const newRetailers = filteredRetailers.filter((retailerId) => id !== retailerId)\n        setFilteredRetailers(newRetailers)\n      } else {\n        setFilteredRetailers([...filteredRetailers, id])\n      }\n    },\n    [filteredRetailers],\n  )\n\n  const renderRetailerItem = useCallback(\n    (r: Retailer) => {\n      const selected = filteredRetailers.some((id) => r.id === id)\n      return (\n        <View key={r.id} style={styles.retailer}>\n          <RetailersFilterItem\n            retailer={{ id: r.id!, slug: r.slug!, name: r.name! }}\n            selected={selected}\n            onPress={() => handleOnRetailerPress(r.id!, selected)}\n            compact={false}\n            showSelectedCheck={false}\n          />\n        </View>\n      )\n    },\n    [filteredRetailers, handleOnRetailerPress, styles.retailer],\n  )\n\n  const handleOnApply = useCallback(() => {\n    if (filteredRetailers.length === 0 && distance === FiltersDefault.distance) {\n      onDelete()\n    } else {\n      onApply({ retailer_ids: filteredRetailers, distance })\n    }\n    onDismiss()\n  }, [filteredRetailers, distance, onDismiss, onDelete, onApply])\n\n  const handleOnDismiss = useCallback(() => {\n    onDismiss()\n  }, [onDismiss])\n\n  const handleOnDelete = useCallback(() => {\n    onDelete()\n    onDismiss()\n  }, [onDelete, onDismiss])\n\n  return (\n    <Portal>\n      <Modal\n        visible={visible}\n        onDismiss={handleOnDismiss}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View style={styles.header}>\n          <Text style={styles.title} variant=\"titleMedium\">\n            {Copies.filter_offers}\n          </Text>\n          <IconButton onPress={handleOnDismiss} icon=\"close\" />\n        </View>\n        <View style={styles.content}>\n          <View style={styles.distanceContainer}>\n            <Text variant=\"bodyLarge\" style={styles.subtitle}>\n              {Copies.by_distance}\n            </Text>\n            <Slider\n              onValueChange={handleOnSliderChange}\n              minimumValue={0}\n              maximumValue={4}\n              step={1}\n              value={sliderStep}\n              minimumTrackTintColor={colors.secondaryContainer}\n              maximumTrackTintColor={colors.secondaryContainer}\n              thumbTintColor={colors.secondary}\n            />\n            <Text variant=\"labelLarge\" style={styles.distanceLabel}>\n              {distance / 1000} Km\n            </Text>\n          </View>\n          <View style={styles.retailersContainer}>\n            <Text style={styles.subtitle} variant=\"bodyLarge\">\n              {Copies.by_retailer}\n            </Text>\n            <ScrollView contentContainerStyle={styles.retailerChipsContainer}>\n              {retailers?.map((r) => renderRetailerItem(r))}\n            </ScrollView>\n          </View>\n          <View style={styles.buttonsContainer}>\n            <Button\n              icon=\"delete-outline\"\n              style={styles.button}\n              mode=\"outlined\"\n              onPress={handleOnDelete}\n            >\n              {Copies.reset_filters}\n            </Button>\n            <Button\n              style={styles.button}\n              buttonColor={colors.primaryContainer}\n              textColor={colors.onPrimaryContainer}\n              mode=\"contained\"\n              onPress={handleOnApply}\n              icon=\"check\"\n            >\n              {Copies.filter}\n            </Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  )\n}\n\nexport default FiltersModal\n","import { useNavigation } from '@react-navigation/native'\nimport { useCallback } from 'react'\nimport { Button, useTheme } from 'react-native-paper'\n\nimport { Copies } from '../../constants'\nimport { useAppSelector } from '../../redux'\n\nexport interface GeoActionProps {\n  style?: object\n}\n\nexport const GeoAction = ({ style }: GeoActionProps) => {\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n  const location = useAppSelector((state) => state.user.location)\n  const navigation = useNavigation()\n  const { colors } = useTheme()\n\n  const handleOnPress = useCallback(() => {\n    navigation.navigate('Geo', { countryCode })\n  }, [countryCode, navigation])\n\n  return (\n    <Button\n      mode=\"text\"\n      textColor={colors.onSurface}\n      onPress={handleOnPress}\n      icon=\"map-marker-outline\"\n      style={style}\n    >\n      {Copies.you_are_here}: {location?.display}\n    </Button>\n  )\n}\n\nexport default GeoAction\n","import { useCallback, useState } from 'react'\nimport { View, type ViewStyle } from 'react-native'\nimport { Searchbar } from 'react-native-paper'\n\nexport interface GeoSearchInputProps {\n  onChangeText: (query: string) => void\n  placeholder?: string\n  containerStyle?: ViewStyle\n}\n\nexport const GeoSearchInput = ({\n  onChangeText,\n  placeholder,\n  containerStyle,\n}: GeoSearchInputProps) => {\n  const [query, setQuery] = useState('')\n\n  const handleOnChangeText = useCallback(\n    (search: string) => {\n      setQuery(search)\n      onChangeText(search)\n    },\n    [onChangeText],\n  )\n\n  return (\n    <View style={containerStyle}>\n      <Searchbar\n        clearIcon=\"close-circle\"\n        placeholder={placeholder}\n        onChangeText={handleOnChangeText}\n        value={query}\n      />\n    </View>\n  )\n}\n\nexport default GeoSearchInput\n","import { useMemo } from 'react'\nimport { StyleSheet } from 'react-native'\nimport { List } from 'react-native-paper'\n\nimport type { PhoFeatureProperties } from '../../api/types'\nimport { SpacingBase } from '../../constants'\n\nexport interface GeoSearchItemProps {\n  type: PhoFeatureProperties['type']\n  title: string\n  onPress?: () => void\n}\n\nconst styles = StyleSheet.create({\n  listItem: {\n    paddingLeft: SpacingBase * 2,\n    paddingRight: SpacingBase * 2,\n  },\n})\n\nconst GeoSearchItem = ({ type, title, onPress }: GeoSearchItemProps) => {\n  const icon = useMemo(() => {\n    switch (type) {\n      case 'street':\n        return 'road-variant'\n      case 'house':\n        return 'office-building-marker'\n      case 'county':\n        return 'home-city-outline'\n      case 'city':\n        return 'city-variant-outline'\n      default:\n        return 'map-marker-outline'\n    }\n  }, [type])\n\n  return (\n    <List.Item\n      style={styles.listItem}\n      title={title}\n      left={() => <List.Icon icon={icon} />}\n      onPress={onPress}\n    />\n  )\n}\n\nexport default GeoSearchItem\n","import { debounce } from 'lodash'\nimport { useCallback, useMemo, useState } from 'react'\nimport type { ListRenderItem, ListRenderItemInfo, ViewStyle } from 'react-native'\nimport { FlatList, StyleSheet, View } from 'react-native'\nimport { ActivityIndicator, Icon, useTheme } from 'react-native-paper'\n\nimport GeoSearchInput from './GeoSearchInput'\nimport GeoSearchItem from './GeoSearchItem'\nimport { usePhoSearchQuery } from '../../api'\nimport type { PhoFeature, PhoFeatureProperties } from '../../api/types'\nimport { Copies, SpacingBase } from '../../constants'\nimport { setLocation, useAppDispatch, useAppSelector } from '../../redux'\nimport { logEvent } from '../../utils'\n\nexport interface GeoSearchProps {\n  onResultPress?: () => void\n  inputContainerStyle?: ViewStyle\n}\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: SpacingBase * 10,\n  },\n})\n\nexport const GeoSearch = ({ onResultPress, inputContainerStyle }: GeoSearchProps) => {\n  const { colors } = useTheme()\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n  const [query, setQuery] = useState<string>()\n  const dispatch = useAppDispatch()\n  const { data: searchData = [], isLoading } = usePhoSearchQuery(\n    // @ts-expect-error: how to handle query undefined?\n    { query, countryCode },\n    { skip: !(query && countryCode) },\n  )\n\n  const handleDisplayText = (properties: PhoFeatureProperties) => {\n    return `${properties.name ?? properties.street}${properties.city ? `, ${properties.city}` : ''}`\n  }\n\n  const handleOnChangeText = useMemo(\n    () =>\n      debounce((query: string) => {\n        if (query.length >= 3) {\n          setQuery(query)\n        }\n        if (query.length === 0) {\n          setQuery('')\n        }\n      }, 300),\n    [],\n  )\n\n  const handleOnPress = useCallback(\n    async ({ properties, geometry }: PhoFeature) => {\n      await dispatch(\n        setLocation({\n          latitude: geometry.coordinates[1],\n          longitude: geometry.coordinates[0],\n          display: handleDisplayText(properties),\n        }),\n      )\n      await logEvent('location_manual_set', { countryCode })\n      onResultPress && onResultPress()\n    },\n    [countryCode, dispatch, onResultPress],\n  )\n\n  const handleRenderItem: ListRenderItem<PhoFeature> = useCallback(\n    ({ item, index }: ListRenderItemInfo<PhoFeature>) => {\n      return (\n        <GeoSearchItem\n          type={item.properties.type}\n          key={index}\n          title={handleDisplayText(item.properties)}\n          onPress={() => handleOnPress(item)}\n        />\n      )\n    },\n    [handleOnPress],\n  )\n\n  return (\n    <>\n      <GeoSearchInput\n        containerStyle={inputContainerStyle}\n        placeholder={Copies.search_city_or_address}\n        onChangeText={handleOnChangeText}\n      />\n      <FlatList\n        initialNumToRender={20}\n        ListEmptyComponent={\n          <View style={styles.placeholder}>\n            {isLoading ? (\n              <ActivityIndicator color={colors.secondaryContainer} size=\"large\" />\n            ) : (\n              <Icon color={colors.outline} source=\"map-search-outline\" size={SpacingBase * 10} />\n            )}\n          </View>\n        }\n        data={query && query.length > 0 ? searchData : []}\n        renderItem={handleRenderItem}\n        keyExtractor={(_, index) => `${index}`}\n        keyboardShouldPersistTaps=\"always\"\n      />\n    </>\n  )\n}\n\nexport default GeoSearch\n","import { Image } from 'expo-image'\nimport { openSettings } from 'expo-linking'\nimport { requestForegroundPermissionsAsync, PermissionStatus } from 'expo-location'\nimport { useCallback, useState } from 'react'\nimport { Platform, View, useWindowDimensions } from 'react-native'\nimport { Button, IconButton, Modal, Portal, Text, useTheme } from 'react-native-paper'\n\nimport { nominatimApi } from '../../api'\nimport type { NomReverseResultAddress } from '../../api/types'\nimport { Copies, SpacingBase } from '../../constants'\nimport { setLocation, useAppDispatch, useAppSelector } from '../../redux'\nimport { getLocation, logEvent, useStyles } from '../../utils'\n\nexport interface GeoLocationButtonProps {\n  onLocationRetrieved?: () => void\n  onLocationRetrievedFailed?: () => void\n}\n\nexport const GeoLocationButton = ({\n  onLocationRetrieved,\n  onLocationRetrievedFailed,\n}: GeoLocationButtonProps) => {\n  const { colors } = useTheme()\n  const dispatch = useAppDispatch()\n  const [isLoadingLocation, setIsLoadingLocation] = useState(false)\n  const [modalVisible, setModalVisible] = useState(false)\n  const { width: windowWidth } = useWindowDimensions()\n  const countryCode = useAppSelector((state) => state.app.countryCode)\n\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      modalContentContainer: {\n        backgroundColor: colors.background,\n        margin: SpacingBase * 2,\n        borderRadius: roundness * 3,\n        overflow: 'hidden',\n      },\n      modalHeader: {\n        alignItems: 'flex-end',\n      },\n      modalContent: {\n        padding: SpacingBase * 2,\n      },\n      modalImage: {\n        width: windowWidth - SpacingBase * 12,\n        height: (windowWidth - SpacingBase * 12) * 0.75,\n        alignSelf: 'center',\n      },\n      modalText: {\n        textAlign: 'center',\n        marginTop: SpacingBase * 4,\n      },\n      modalButton: {\n        marginTop: SpacingBase * 4,\n      },\n    }),\n    [windowWidth],\n  )\n\n  const handleSetLocationDisplay = useCallback((data: NomReverseResultAddress) => {\n    const { road, quarter, city, town, village, state } = data\n    let firstPart = ''\n    let secondPart = ''\n    if (road) {\n      firstPart = `${road}, `\n    } else if (quarter) {\n      firstPart = `${quarter}, `\n    }\n    if (city) {\n      secondPart = city\n    } else if (town) {\n      secondPart = town\n    } else if (village) {\n      secondPart = village\n    } else if (state) {\n      secondPart = state\n    }\n    return firstPart + secondPart\n  }, [])\n\n  const handleOnRetrieveLocationPress = useCallback(async () => {\n    setIsLoadingLocation(true)\n\n    const { status } = await requestForegroundPermissionsAsync()\n    if (status !== PermissionStatus.GRANTED) {\n      await logEvent('location_permission_denied', { countryCode })\n      setIsLoadingLocation(false)\n      if (Platform.OS !== 'web') {\n        return setModalVisible(true)\n      }\n      return\n    }\n\n    await logEvent('location_permission_granted', { countryCode })\n\n    let latitude: number | null = null\n    let longitude: number | null = null\n\n    await getLocation()\n      .then(({ coords }) => {\n        latitude = coords.latitude\n        longitude = coords.longitude\n      })\n      .catch(async () => {\n        await logEvent('location_retrieved_failed', {\n          countryCode,\n        })\n        onLocationRetrievedFailed && onLocationRetrievedFailed()\n        return setIsLoadingLocation(false)\n      })\n\n    if (!latitude || !longitude) {\n      return\n    }\n\n    await logEvent('location_retrieved_success', { countryCode })\n\n    dispatch(nominatimApi.endpoints.nomReverse.initiate({ latitude, longitude }))\n      .then(({ data }) => {\n        if (!latitude || !longitude) {\n          return\n        }\n        void dispatch(\n          setLocation({\n            latitude,\n            longitude,\n            display: data ? handleSetLocationDisplay(data) : `${latitude}, ${longitude}`,\n          }),\n        )\n        setIsLoadingLocation(false)\n        onLocationRetrieved && onLocationRetrieved()\n      })\n      .catch(() => {\n        setIsLoadingLocation(false)\n        onLocationRetrieved && onLocationRetrieved()\n      })\n  }, [\n    countryCode,\n    dispatch,\n    handleSetLocationDisplay,\n    onLocationRetrieved,\n    onLocationRetrievedFailed,\n  ])\n\n  const handleOnModalButtonPress = useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      await openSettings()\n    }\n    return setModalVisible(false)\n  }, [])\n\n  return (\n    <>\n      <Portal>\n        <Modal\n          visible={modalVisible}\n          onDismiss={() => setModalVisible(false)}\n          contentContainerStyle={styles.modalContentContainer}\n        >\n          <View style={styles.modalHeader}>\n            <IconButton onPress={() => setModalVisible(false)} icon=\"close\" />\n          </View>\n          <View style={styles.modalContent}>\n            {/* eslint-disable-next-line @typescript-eslint/no-unsafe-assignment */}\n            <Image source={require('../../assets/onboarding/3.png')} style={styles.modalImage} />\n            <Text style={styles.modalText} variant=\"titleLarge\">\n              {Copies.cannot_geolocalize}\n            </Text>\n            <Text style={styles.modalText}>\n              {Platform.select({\n                native: Copies.give_geolocation_permission,\n                web: Copies.give_geolocation_permission_web,\n              })}\n            </Text>\n            <Button\n              style={styles.modalButton}\n              mode=\"contained-tonal\"\n              onPress={handleOnModalButtonPress}\n            >\n              {Platform.select({\n                native: Copies.go_to_settings,\n                web: Copies.close,\n              })}\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n      <Button\n        loading={isLoadingLocation}\n        disabled={isLoadingLocation}\n        onPress={handleOnRetrieveLocationPress}\n        icon=\"map-marker-account\"\n        mode=\"elevated\"\n        buttonColor={colors.primaryContainer}\n        textColor={colors.onPrimaryContainer}\n      >\n        {Copies.use_your_location}\n      </Button>\n    </>\n  )\n}\n\nexport default GeoLocationButton\n","import type { BottomTabScreenProps } from '@react-navigation/bottom-tabs'\nimport { useCallback, useMemo, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport type { NativeScrollEvent, NativeSyntheticEvent } from 'react-native'\nimport { Platform, StyleSheet } from 'react-native'\nimport { AnimatedFAB, FAB } from 'react-native-paper'\n\nimport { useGetNearbyCataloguesByRetailerIdsWithAdsQuery } from '../api'\nimport CatalogueStoreDialog from '../components/CatalogueStoreDialog'\nimport { CataloguesGrid } from '../components/CataloguesGrid'\nimport ErrorFallback from '../components/ErrorFallback'\nimport FiltersModal from '../components/FiltersModal'\nimport { GeoAction } from '../components/Geo'\nimport { SpacingBase, Copies } from '../constants'\nimport type { HomeTabsParamList } from '../navigation/types'\nimport { deleteFilters, setFilters, useAppDispatch, useAppSelector } from '../redux'\nimport { storage, storageKeys } from '../utils'\n\nexport type CataloguesScreenProps = BottomTabScreenProps<\n  HomeTabsParamList,\n  'Catalogues',\n  'HomeTabs'\n>\n\nconst styles = StyleSheet.create({\n  button: {\n    marginLeft: SpacingBase * 2,\n    marginRight: SpacingBase * 2,\n    marginBottom: SpacingBase * 2,\n  },\n  fab: {\n    position: 'absolute',\n    right: SpacingBase * 2,\n    bottom: SpacingBase * 2,\n  },\n  grid: {\n    paddingBottom: SpacingBase * 8,\n  },\n})\n\nexport const CataloguesScreen = ({ route, navigation }: CataloguesScreenProps) => {\n  const storedFilters = storage.getString(storageKeys.filters)\n  const { location, filters } = useAppSelector((state) => state.user)\n  const [isFabExtended, setIsFabExtended] = useState(true)\n\n  const hasRetailerFilter = useMemo(\n    () => filters.retailer_ids.length > 0,\n    [filters.retailer_ids.length],\n  )\n\n  const {\n    data: catalogues = [],\n    error: cataloguesError,\n    refetch,\n  } = useGetNearbyCataloguesByRetailerIdsWithAdsQuery(\n    {\n      // @ts-expect-error: skip\n      latitude: location?.latitude,\n      // @ts-expect-error: skip\n      longitude: location?.longitude,\n      distance: filters.distance,\n      retailer_ids: filters.retailer_ids,\n    },\n    { skip: !location },\n  )\n\n  const [refreshing, setRefreshing] = useState(false)\n  const [modalVisible, setModalVisible] = useState(false)\n  const dispatch = useAppDispatch()\n\n  if (cataloguesError) {\n    throw new Error(JSON.stringify(cataloguesError))\n  }\n\n  const handleOnRefresh = useCallback(async () => {\n    setRefreshing(true)\n    await refetch()\n    setRefreshing(false)\n  }, [refetch])\n\n  const handleOnModalDismiss = useCallback(() => {\n    setModalVisible(false)\n  }, [])\n\n  const handleOnFabPress = useCallback(() => {\n    setModalVisible(true)\n  }, [])\n\n  const handleOnFiltersChange = useCallback(\n    ({ retailer_ids, distance }: { retailer_ids: string[]; distance: number }) => {\n      dispatch(setFilters({ distance, retailer_ids }))\n    },\n    [dispatch],\n  )\n\n  const handleOnFiltersDelete = useCallback(() => {\n    dispatch(deleteFilters())\n  }, [dispatch])\n\n  const handleOnScroll = useCallback(({ nativeEvent }: NativeSyntheticEvent<NativeScrollEvent>) => {\n    const currentScrollPosition = Math.floor(nativeEvent?.contentOffset?.y) ?? 0\n    setIsFabExtended(currentScrollPosition <= 0)\n  }, [])\n\n  const fabLabel = useMemo(() => {\n    if (!storedFilters) {\n      return Copies.filter\n    }\n    const distanceLabel = `${filters.distance / 1000} Km`\n    const retailersLabel = hasRetailerFilter\n      ? `, ${filters.retailer_ids.length} ${\n          filters.retailer_ids.length === 1 ? Copies.retailer : Copies.retailers\n        }`\n      : ''\n    return `${distanceLabel}${retailersLabel}`\n  }, [filters.distance, filters.retailer_ids.length, hasRetailerFilter, storedFilters])\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <CataloguesGrid\n        catalogues={catalogues}\n        onRefresh={handleOnRefresh}\n        refreshing={refreshing}\n        ListHeaderComponent={<GeoAction style={styles.button} />}\n        onScroll={handleOnScroll}\n        contentContainerStyle={styles.grid}\n      />\n      {Platform.OS === 'web' ? (\n        <FAB\n          variant=\"primary\"\n          onPress={handleOnFabPress}\n          style={styles.fab}\n          icon=\"filter-outline\"\n          label={fabLabel}\n        />\n      ) : (\n        <AnimatedFAB\n          variant=\"primary\"\n          onPress={handleOnFabPress}\n          style={styles.fab}\n          icon=\"filter-outline\"\n          label={fabLabel}\n          extended={isFabExtended}\n          animateFrom=\"right\"\n          iconMode=\"dynamic\"\n        />\n      )}\n      <FiltersModal\n        visible={modalVisible}\n        onDismiss={handleOnModalDismiss}\n        onApply={handleOnFiltersChange}\n        onDelete={handleOnFiltersDelete}\n      />\n      <CatalogueStoreDialog />\n    </ErrorBoundary>\n  )\n}\n\nexport default CataloguesScreen\n","import { useNavigation } from '@react-navigation/native'\nimport { useCallback } from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Button, Text } from 'react-native-paper'\n\nimport { Copies, SpacingBase } from '../constants'\nimport { useAppSelector } from '../redux'\n\nexport interface EmptyFavListProps {\n  type: 'stores' | 'catalogues'\n}\n\nconst styles = StyleSheet.create({\n  emptyTitle: {\n    textAlign: 'center',\n    marginBottom: SpacingBase * 4,\n  },\n})\n\nconst EmptyFavList = ({ type }: EmptyFavListProps) => {\n  const { countryCode, citySlug } = useAppSelector((state) => state.app)\n  const navigation = useNavigation()\n\n  const handleOnEmptyPress = useCallback(() => {\n    navigation.navigate('HomeTabs', {\n      screen: type === 'catalogues' ? 'Catalogues' : 'Stores',\n      params: citySlug ? { citySlug, countryCode } : { countryCode },\n    })\n  }, [citySlug, countryCode, navigation, type])\n\n  return (\n    <>\n      <Text style={styles.emptyTitle} variant=\"bodyLarge\">\n        {type === 'stores' ? Copies.empty_favourites_stores : Copies.empty_favourites_catalogues}\n      </Text>\n      <Button onPress={handleOnEmptyPress} mode=\"elevated\">\n        {type === 'stores'\n          ? Copies.empty_favourites_button_stores\n          : Copies.empty_favourites_button_catalogues}\n      </Button>\n    </>\n  )\n}\n\nexport default EmptyFavList\n","import type { BottomTabScreenProps } from '@react-navigation/bottom-tabs'\nimport { useEffect, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { ScrollView, StyleSheet, View } from 'react-native'\nimport { Divider, List, Snackbar } from 'react-native-paper'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\nimport { useGetCataloguesByIdsQuery, useGetStoresByIdsQuery } from '../api'\nimport type { Catalogue, Store } from '../api/types'\nimport CatalogueStoreDialog from '../components/CatalogueStoreDialog'\nimport { CataloguesList } from '../components/CataloguesList'\nimport EmptyFavList from '../components/EmptyFavList'\nimport ErrorFallback from '../components/ErrorFallback'\nimport { StoresList } from '../components/StoresList'\nimport { Copies, SpacingBase } from '../constants'\nimport type { HomeTabsParamList } from '../navigation/types'\nimport {\n  deleteFavouriteCatalogue,\n  deleteFavouriteStore,\n  useAppDispatch,\n  useAppSelector,\n} from '../redux'\n\nexport type ForYouScreenProps = BottomTabScreenProps<HomeTabsParamList, 'ForYou', 'HomeTabs'>\n\nconst styles = StyleSheet.create({\n  listContainer: {\n    paddingTop: SpacingBase,\n    paddingLeft: SpacingBase * 2,\n  },\n  placehoderStores: {\n    height: 124,\n    justifyContent: 'center',\n    paddingLeft: SpacingBase * 2,\n    paddingRight: SpacingBase * 2,\n  },\n  placehoderCatalogues: {\n    height: 321,\n    justifyContent: 'center',\n    paddingLeft: SpacingBase * 2,\n    paddingRight: SpacingBase * 2,\n  },\n})\n\nconst StoresOrPlaceholder = ({ isLoading, stores }: { isLoading: boolean; stores: Store[] }) => {\n  return isLoading || stores.length > 0 ? (\n    <StoresList contentContainerStyle={styles.listContainer} stores={stores} />\n  ) : (\n    <View style={styles.placehoderStores}>\n      <EmptyFavList type=\"stores\" />\n    </View>\n  )\n}\n\nconst CataloguesOrPlaceholder = ({\n  isLoading,\n  catalogues,\n}: {\n  isLoading: boolean\n  catalogues: Catalogue[]\n}) => {\n  return isLoading || catalogues.length > 0 ? (\n    <CataloguesList contentContainerStyle={styles.listContainer} catalogues={catalogues} />\n  ) : (\n    <View style={styles.placehoderCatalogues}>\n      <EmptyFavList type=\"catalogues\" />\n    </View>\n  )\n}\n\nexport const ForYouScreen = ({ route, navigation }: ForYouScreenProps) => {\n  const dispatch = useAppDispatch()\n  const [snackbarVisibleStore, setSnackbarVisibleStore] = useState(false)\n  const [snackbarVisibleCatalogue, setSnackbarVisibleCatalogue] = useState(false)\n  const { favourite_catalogues, favourite_stores } = useAppSelector((state) => state.user)\n  const [checkDeleteStore, setCheckDeleteStore] = useState(false)\n  const [checkDeleteCatalogue, setCheckDeleteCatalogue] = useState(false)\n  const {\n    data: catalogues = [],\n    error: cataloguesError,\n    isLoading: isLoadingCatalogues,\n    isSuccess: isSuccessCatalogues,\n  } = useGetCataloguesByIdsQuery(favourite_catalogues)\n  const {\n    data: stores = [],\n    error: storesError,\n    isLoading: isLoadingStores,\n    isSuccess: isSuccessStores,\n  } = useGetStoresByIdsQuery(favourite_stores)\n  const insets = useSafeAreaInsets()\n\n  // delete not-existing stores\n  useEffect(() => {\n    if (!isSuccessStores || checkDeleteStore) {\n      return\n    }\n    favourite_stores.forEach((favStore) => {\n      if (!stores.some((store) => store.id === favStore)) {\n        dispatch(deleteFavouriteStore(favStore))\n        setSnackbarVisibleStore(true)\n      }\n    })\n    setCheckDeleteStore(true)\n  }, [checkDeleteStore, dispatch, favourite_stores, isSuccessStores, stores])\n\n  // delete not-existing catalogues\n  useEffect(() => {\n    if (!isSuccessCatalogues || checkDeleteCatalogue) {\n      return\n    }\n    favourite_catalogues.forEach((favCatalogue) => {\n      if (!catalogues.some((catalogue) => catalogue.id === favCatalogue)) {\n        dispatch(deleteFavouriteCatalogue(favCatalogue))\n        setSnackbarVisibleCatalogue(true)\n      }\n    })\n    setCheckDeleteCatalogue(true)\n  }, [catalogues, dispatch, favourite_catalogues, isSuccessCatalogues, checkDeleteCatalogue])\n\n  if (cataloguesError || storesError) {\n    throw new Error(JSON.stringify(cataloguesError || storesError))\n  }\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <ScrollView style={{ marginTop: insets.top }}>\n        <List.Section title={Copies.your_favourites_stores}>\n          <StoresOrPlaceholder isLoading={isLoadingStores} stores={stores} />\n        </List.Section>\n        <Divider />\n        <List.Section title={Copies.your_favourites_catalogues}>\n          <CataloguesOrPlaceholder isLoading={isLoadingCatalogues} catalogues={catalogues} />\n        </List.Section>\n      </ScrollView>\n      <CatalogueStoreDialog />\n      <Snackbar\n        visible={snackbarVisibleStore}\n        onDismiss={() => setSnackbarVisibleStore(false)}\n        action={{\n          label: 'Ok',\n          onPress: () => setSnackbarVisibleStore(false),\n        }}\n      >\n        {Copies.force_removed_from_favourites_store}\n      </Snackbar>\n      <Snackbar\n        visible={snackbarVisibleCatalogue}\n        onDismiss={() => setSnackbarVisibleCatalogue(false)}\n        action={{\n          label: 'Ok',\n          onPress: () => setSnackbarVisibleCatalogue(false),\n        }}\n      >\n        {Copies.force_removed_from_favourites_catalogue}\n      </Snackbar>\n    </ErrorBoundary>\n  )\n}\n\nexport default ForYouScreen\n","import type { StackScreenProps } from '@react-navigation/stack'\nimport { useCallback, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { StyleSheet, View } from 'react-native'\nimport { Snackbar, Text } from 'react-native-paper'\n\nimport ErrorFallback from '../components/ErrorFallback'\nimport { GeoLocationButton, GeoSearch } from '../components/Geo'\nimport { Copies, SpacingBase } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\n\nexport type GeoScreenProps = StackScreenProps<RootStackParamList, 'Geo', 'RootStack'>\n\nconst styles = StyleSheet.create({\n  content: {\n    paddingTop: SpacingBase,\n    paddingLeft: SpacingBase * 2,\n    paddingRight: SpacingBase * 2,\n  },\n  input: {\n    paddingLeft: SpacingBase * 2,\n    paddingRight: SpacingBase * 2,\n    marginBottom: SpacingBase,\n  },\n  divider: {\n    marginTop: SpacingBase,\n    marginBottom: SpacingBase,\n    textAlign: 'center',\n  },\n})\n\nexport const GeoScreen = ({ route, navigation }: GeoScreenProps) => {\n  const [snackbarVisible, setSnackbarVisible] = useState(false)\n\n  const handleOnFailed = useCallback(() => {\n    setSnackbarVisible(true)\n  }, [])\n\n  const handleOnResult = useCallback(() => {\n    navigation.navigate('HomeTabs', { screen: 'Catalogues', params: route.params })\n  }, [navigation, route.params])\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <View style={styles.content}>\n        <GeoLocationButton\n          onLocationRetrieved={handleOnResult}\n          onLocationRetrievedFailed={handleOnFailed}\n        />\n        <Text style={styles.divider} variant=\"labelMedium\">\n          {Copies.or}\n        </Text>\n      </View>\n      <GeoSearch inputContainerStyle={styles.input} onResultPress={handleOnResult} />\n      <Snackbar\n        visible={snackbarVisible}\n        onDismiss={() => setSnackbarVisible(false)}\n        action={{\n          label: 'Ok',\n          onPress: () => setSnackbarVisible(false),\n        }}\n      >\n        {Copies.cannot_geolocalize_try_again}\n      </Snackbar>\n    </ErrorBoundary>\n  )\n}\n\nexport default GeoScreen\n","import type { StackScreenProps } from '@react-navigation/stack'\nimport { StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\n\nimport { SpacingBase } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\n\nexport type NotFoundScreenProps = StackScreenProps<RootStackParamList, 'NotFound', 'RootStack'>\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    padding: SpacingBase * 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n})\n\n// TODO: improve message\nexport const NotFoundScreen = ({ route, navigation }: NotFoundScreenProps) => {\n  return (\n    <View style={styles.main}>\n      <Text>Not Found</Text>\n    </View>\n  )\n}\n\nexport default NotFoundScreen\n","import type { StackScreenProps } from '@react-navigation/stack'\n\nimport type { RootStackParamList } from '../navigation/types'\n\nexport type OnBoardingScreenProps = StackScreenProps<RootStackParamList, 'Onboarding', 'RootStack'>\n\nexport const OnBoardingScreen = ({ route, navigation }: OnBoardingScreenProps) => null\n\nexport default OnBoardingScreen\n","import { Fragment } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Divider, Text } from 'react-native-paper'\n\nimport type { Store } from '../api/types'\nimport { ExtraColors, SpacingBase } from '../constants'\n\nexport interface OpeningHoursProps {\n  hours: Store['opening_hours']\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    padding: SpacingBase,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n})\n\nconst OpeningHours = ({ hours }: OpeningHoursProps) => {\n  return (\n    <View>\n      {hours.map((hour, index) => {\n        const textStyle: object | undefined =\n          hour.isToday && hour.isOpen\n            ? {\n                color: ExtraColors.forestgreen,\n                fontWeight: 'bold',\n              }\n            : hour.isToday && !hour.isOpen\n              ? {\n                  color: ExtraColors.crimson,\n                  fontWeight: 'bold',\n                }\n              : undefined\n\n        return (\n          <Fragment key={hour.dayNumber}>\n            <View style={styles.main}>\n              <Text style={textStyle}>{hour.day}</Text>\n              <View>\n                {hour.time.map((time, index) => (\n                  <Text style={textStyle} key={index}>\n                    {time.from} - {time.to}\n                  </Text>\n                ))}\n              </View>\n            </View>\n            {index < hours.length - 1 && <Divider />}\n          </Fragment>\n        )\n      })}\n    </View>\n  )\n}\n\nexport default OpeningHours\n","export const StoreStaticMap = () => null\n\nexport default StoreStaticMap\n","import type { StackScreenProps } from '@react-navigation/stack'\nimport { Image } from 'expo-image'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ScrollView, View, useWindowDimensions } from 'react-native'\nimport { createOpenLink } from 'react-native-open-maps'\nimport { ActivityIndicator, Appbar, Avatar, FAB, Surface, Text, useTheme } from 'react-native-paper'\n\nimport { useGetStoreByIdWithCataloguesQuery } from '../api'\nimport type { Store } from '../api/types'\nimport { StoreDetailAd } from '../components/Ads'\nimport { CataloguesList } from '../components/CataloguesList'\nimport type { HeaderProps } from '../components/Header'\nimport Header from '../components/Header'\nimport OpeningHours from '../components/OpeningHours'\nimport StoreOpening from '../components/StoreOpening'\nimport { StoreStaticMap } from '../components/StoresMap'\nimport { Copies, ExtraColors, SpacingBase } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\nimport { deleteFavouriteStore, setFavouriteStore, useAppDispatch, useAppSelector } from '../redux'\nimport { useStyles } from '../utils'\n\nexport type StoreDetailScreenProps = StackScreenProps<\n  RootStackParamList,\n  'StoreDetail',\n  'RootStack'\n>\n\nexport const StoreDetailScreen = ({ route, navigation }: StoreDetailScreenProps) => {\n  const { id } = route.params\n  const [store, setStore] = useState<Store | null>(null)\n  const favourite_stores = useAppSelector((state) => state.user.favourite_stores)\n  const { data: stores, error, isLoading } = useGetStoreByIdWithCataloguesQuery(id)\n  const { height: windowHeight } = useWindowDimensions()\n  const isFav = useMemo(\n    () => (store?.id ? favourite_stores.includes(store.id) : false),\n    [store, favourite_stores],\n  )\n  const dispatch = useAppDispatch()\n  const { colors } = useTheme()\n\n  const styles = useStyles(\n    ({ colors, roundness }) => ({\n      loaderContainer: {\n        flex: 1,\n        justifyContent: 'center',\n      },\n      mapContainer: {\n        height: windowHeight / 5,\n        borderBottomWidth: SpacingBase / 2,\n        borderColor: colors.secondaryContainer,\n      },\n      directionsButton: {\n        position: 'absolute',\n        bottom: SpacingBase * 2,\n        right: SpacingBase * 2,\n        backgroundColor: colors.secondaryContainer,\n      },\n      logoContainer: {\n        width: SpacingBase * 10,\n        height: SpacingBase * 10,\n        borderRadius: SpacingBase * 5,\n        borderWidth: SpacingBase / 2,\n        borderColor: colors.secondaryContainer,\n        padding: SpacingBase / 2,\n        backgroundColor: 'white',\n        overflow: 'hidden',\n        alignSelf: 'center',\n        marginTop: -SpacingBase * 5,\n      },\n      logo: {\n        width: SpacingBase * 8,\n        height: SpacingBase * 8,\n      },\n      avatar: {\n        backgroundColor: colors.secondaryContainer,\n      },\n      detailsContainer: {\n        paddingLeft: SpacingBase * 2,\n        paddingRight: SpacingBase * 2,\n      },\n      opening: {\n        marginTop: SpacingBase,\n        alignItems: 'center',\n      },\n      title: {\n        marginTop: SpacingBase,\n        textAlign: 'center',\n      },\n      subtitle: {\n        textAlign: 'center',\n        marginTop: SpacingBase,\n      },\n      hoursContainer: {\n        marginTop: SpacingBase * 2,\n      },\n      cataloguesContainer: {\n        marginTop: SpacingBase * 2,\n        paddingLeft: SpacingBase * 2,\n        paddingTop: SpacingBase * 2,\n      },\n      emptyContainer: {\n        margin: SpacingBase * 2,\n        padding: SpacingBase * 2,\n        borderRadius: roundness * 3,\n        backgroundColor: colors.secondaryContainer,\n      },\n      emptyTitle: {\n        marginBottom: SpacingBase * 2,\n        textAlign: 'center',\n      },\n      descriptionContainer: {\n        padding: SpacingBase * 2,\n      },\n    }),\n    [windowHeight],\n  )\n\n  if (error) {\n    throw new Error(JSON.stringify(error))\n  }\n\n  const handleOnPressFav = useCallback(async () => {\n    if (!store) {\n      return\n    }\n    if (isFav) {\n      dispatch(deleteFavouriteStore(store.id!))\n    } else {\n      await dispatch(setFavouriteStore(store.id!))\n    }\n  }, [store, dispatch, isFav])\n\n  const renderHeader = useCallback(\n    (props: HeaderProps) => {\n      return (\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        <Header {...props}>\n          <Appbar.Action\n            size={SpacingBase * 4}\n            onPress={handleOnPressFav}\n            color={ExtraColors.gold}\n            icon={isFav ? 'star' : 'star-outline'}\n          />\n        </Header>\n      )\n    },\n    [handleOnPressFav, isFav],\n  )\n\n  useEffect(() => {\n    if (stores && stores.length > 0) {\n      setStore(stores[0])\n      navigation.setOptions({\n        header: renderHeader,\n        headerTitle: stores[0].retailer_name!,\n        title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.store} ${stores[0].retailer_name}, ${stores[0].address}, ${stores[0].city}`,\n      })\n    }\n  }, [navigation, renderHeader, stores])\n\n  return isLoading || !store ? (\n    <View style={styles.loaderContainer}>\n      <ActivityIndicator color={colors.secondaryContainer} size=\"large\" />\n    </View>\n  ) : (\n    <ScrollView>\n      <View style={styles.mapContainer}>\n        <StoreStaticMap store={store} />\n        <FAB\n          onPress={createOpenLink({\n            query: `${store.name}, ${store.address}`,\n            queryPlaceId: store.metadata?.google_place_id,\n          })}\n          icon=\"directions\"\n          size=\"small\"\n          style={styles.directionsButton}\n          color={colors.onSecondaryContainer}\n        />\n      </View>\n      <View style={styles.logoContainer}>\n        {store.retailer_thumb_url ? (\n          <Image contentFit=\"contain\" style={styles.logo} source={store.retailer_thumb_url} />\n        ) : (\n          <Avatar.Icon\n            color={colors.onSecondaryContainer}\n            style={styles.avatar}\n            size={SpacingBase * 8}\n            icon=\"store\"\n          />\n        )}\n      </View>\n      <View style={styles.detailsContainer}>\n        {store._isOpen !== undefined && (\n          <View style={styles.opening}>\n            <StoreOpening isOpen={store._isOpen} />\n          </View>\n        )}\n        <Text style={styles.title} variant=\"headlineSmall\">\n          {store.address}\n        </Text>\n        <Text style={styles.subtitle}>{store.city}</Text>\n        {store.opening_hours.length > 0 && (\n          <View style={styles.hoursContainer}>\n            <OpeningHours hours={store.opening_hours} />\n          </View>\n        )}\n      </View>\n      {store.catalogues && store.catalogues.length > 0 ? (\n        <>\n          <StoreDetailAd />\n          <CataloguesList\n            contentContainerStyle={styles.cataloguesContainer}\n            catalogues={store.catalogues}\n          />\n        </>\n      ) : (\n        <Surface style={styles.emptyContainer}>\n          <Text style={styles.emptyTitle} variant=\"bodyLarge\">\n            {Copies.no_offers_for_store_title}\n          </Text>\n          <Text>{Copies.no_offers_for_store_subtitle}</Text>\n        </Surface>\n      )}\n      {store.description && (\n        <View style={styles.descriptionContainer}>\n          <Text variant=\"bodyLarge\">{store.description}</Text>\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nexport default StoreDetailScreen\n","export const StoresMap = () => null\n\nexport default StoresMap\n","import type { BottomTabScreenProps } from '@react-navigation/bottom-tabs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { Platform, View, useWindowDimensions } from 'react-native'\nimport { useTheme } from 'react-native-paper'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\nimport type { Route, SceneRendererProps, NavigationState } from 'react-native-tab-view'\nimport { TabView, TabBar } from 'react-native-tab-view'\n\nimport { useGetNearbyStoresAndRetailersWithAdsQuery } from '../api'\nimport type { RetailerFilter } from '../api/types'\nimport CatalogueStoreDialog from '../components/CatalogueStoreDialog'\nimport ErrorFallback from '../components/ErrorFallback'\nimport { RetailersFilter } from '../components/RetailersFilter'\nimport { StoresList } from '../components/StoresList'\nimport { StoresMap } from '../components/StoresMap'\nimport { Copies, DefaultLocations, SpacingBase } from '../constants'\nimport type { HomeTabsParamList } from '../navigation/types'\nimport { useAppSelector } from '../redux'\nimport type { Coords } from '../redux/types'\nimport { useStyles } from '../utils'\n\nexport type StoresScreenProps = BottomTabScreenProps<HomeTabsParamList, 'Stores', 'HomeTabs'>\n\nexport const StoresScreen = ({ route, navigation }: StoresScreenProps) => {\n  const layout = useWindowDimensions()\n  const { countryCode } = route.params\n  const location = useAppSelector((state) => state.user.location)\n  const [coords, setCoords] = useState<Coords>()\n  const [index, setIndex] = useState(0)\n  const [routes] = useState([\n    { key: 'list', title: Copies.list },\n    { key: 'map', title: Copies.map },\n  ])\n  const {\n    data = { stores: [], retailers: [] },\n    error,\n    isFetching,\n  } = useGetNearbyStoresAndRetailersWithAdsQuery(\n    {\n      latitude: coords?.latitude ?? DefaultLocations[countryCode].latitude,\n      longitude: coords?.longitude ?? DefaultLocations[countryCode].longitude,\n    },\n    { skip: !coords },\n  )\n  const { colors } = useTheme()\n  const [filteredStores, setFilteredStores] = useState(data.stores)\n  const insets = useSafeAreaInsets()\n\n  const styles = useStyles(\n    ({ colors }) => ({\n      tabBar: {\n        backgroundColor: colors.background,\n        marginBottom: SpacingBase,\n        paddingTop: insets.top,\n      },\n      tabBarIndicator: {\n        backgroundColor: colors.primaryContainer,\n      },\n    }),\n    [insets.top],\n  )\n\n  useEffect(() => {\n    if (location) {\n      setCoords({ latitude: location.latitude, longitude: location.longitude })\n    }\n    setFilteredStores([])\n  }, [location])\n\n  if (error) {\n    throw new Error(JSON.stringify(error))\n  }\n\n  const handleOnSearchRequest = useCallback((coords: Coords) => {\n    setCoords(coords)\n  }, [])\n\n  const handleRenderScene = useCallback(\n    ({ route }: { route: Route }) => {\n      switch (route.key) {\n        case 'list':\n          return (\n            <StoresList\n              vertical\n              stores={filteredStores.length > 0 ? filteredStores : data.stores}\n              showAds\n            />\n          )\n        case 'map':\n          return (\n            location && (\n              <StoresMap\n                initialCoords={{ latitude: location.latitude, longitude: location.longitude }}\n                stores={filteredStores.length > 0 ? filteredStores : data.stores}\n                onSearchRequest={(coords) => handleOnSearchRequest(coords)}\n              />\n            )\n          )\n        default:\n          return null\n      }\n    },\n    [data.stores, filteredStores, handleOnSearchRequest, location],\n  )\n\n  const handleOnFiltersChange = useCallback(\n    (retailers: RetailerFilter['id'][]) => {\n      const newStores = data.stores.filter((store) =>\n        retailers.some((id) => id === store.retailer_id),\n      )\n      newStores && setFilteredStores(newStores)\n    },\n    [data.stores],\n  )\n\n  const handleRenderTabBar = useCallback(\n    (props: SceneRendererProps & { navigationState: NavigationState<Route> }) => {\n      return (\n        <View>\n          <TabBar\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...props}\n            indicatorStyle={styles.tabBarIndicator}\n            style={styles.tabBar}\n            activeColor={colors.onBackground}\n            inactiveColor={colors.onBackground}\n          />\n          <RetailersFilter\n            reset={isFetching}\n            onChange={handleOnFiltersChange}\n            retailers={data.retailers}\n          />\n        </View>\n      )\n    },\n    [\n      colors.onBackground,\n      data.retailers,\n      handleOnFiltersChange,\n      styles.tabBar,\n      styles.tabBarIndicator,\n      isFetching,\n    ],\n  )\n\n  if (Platform.OS !== 'web') {\n    return (\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\n        <TabView\n          navigationState={{ index, routes }}\n          renderScene={handleRenderScene}\n          onIndexChange={setIndex}\n          initialLayout={{ width: layout.width }}\n          renderTabBar={handleRenderTabBar}\n          lazy\n        />\n        <CatalogueStoreDialog />\n      </ErrorBoundary>\n    )\n  }\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <StoresList\n        vertical\n        stores={filteredStores.length > 0 ? filteredStores : data.stores}\n        showAds\n      />\n      <CatalogueStoreDialog />\n    </ErrorBoundary>\n  )\n}\n\nexport default StoresScreen\n","import type { StackScreenProps } from '@react-navigation/stack'\n\nimport { Copies } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\n\nexport type ContactsScreenProps = StackScreenProps<RootStackParamList, 'Contacts', 'RootStack'>\n\nexport const ContactsScreen = ({ route, navigation }: ContactsScreenProps) => {\n  return (\n    <iframe\n      width=\"100%\"\n      height=\"100%\"\n      style={{ borderWidth: 0 }}\n      src={process.env.EXPO_PUBLIC_CONTACTS_URL}\n      title={Copies.contacts}\n    />\n  )\n}\n\nexport default ContactsScreen\n","import type { StackScreenProps } from '@react-navigation/stack'\n\nimport { Copies } from '../constants'\nimport type { RootStackParamList } from '../navigation/types'\n\nexport type PrivacyPolicyScreenProps = StackScreenProps<\n  RootStackParamList,\n  'PrivacyPolicy',\n  'RootStack'\n>\n\nexport const PrivacyPolicyScreen = ({ route, navigation }: PrivacyPolicyScreenProps) => {\n  return (\n    <iframe\n      width=\"100%\"\n      height=\"100%\"\n      style={{ borderWidth: 0 }}\n      src={process.env.EXPO_PUBLIC_PRIVACY_POLICY_URL}\n      title={Copies.contacts}\n    />\n  )\n}\n\nexport default PrivacyPolicyScreen\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { CommonActions } from '@react-navigation/native'\nimport type { StackScreenProps } from '@react-navigation/stack'\nimport { useMemo, useState } from 'react'\nimport { Platform } from 'react-native'\nimport { Drawer } from 'react-native-drawer-layout'\nimport { BottomNavigation, Icon } from 'react-native-paper'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\nimport type { HomeTabsParamList, RootStackParamList } from './types'\nimport HeaderTab from '../components/HeaderTab'\nimport MainDrawer from '../components/MainDrawer'\nimport { Copies, SpacingBase } from '../constants'\nimport { useAppSelector } from '../redux'\nimport { CataloguesScreen, ForYouScreen, StoresScreen } from '../screens'\nimport { useStyles } from '../utils'\n\nexport type HomeTabsProps = StackScreenProps<RootStackParamList, 'HomeTabs', 'RootStack'>\n\nconst Tab = createBottomTabNavigator<HomeTabsParamList>()\n\nexport const HomeTabs = ({ navigation, route }: HomeTabsProps) => {\n  const { countryCode, citySlug } = useAppSelector((state) => state.app)\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const insets = useSafeAreaInsets()\n\n  const styles = useStyles(\n    ({ colors }) => ({\n      drawer: {\n        backgroundColor: colors.surface,\n        justifyContent: 'flex-end',\n        paddingTop: insets.top + SpacingBase * 2,\n        paddingBottom: SpacingBase * 2,\n      },\n    }),\n    [insets.top],\n  )\n\n  // TODO: avoid ternary when bug will be fixed:\n  // - https://github.com/react-navigation/react-navigation/issues/8671\n  // - https://github.com/react-navigation/react-navigation/issues/7909\n  const initialParams = useMemo(\n    () => (citySlug ? { countryCode, citySlug } : { countryCode }),\n    [citySlug, countryCode],\n  )\n\n  return (\n    <Drawer\n      open={drawerOpen}\n      onOpen={() => setDrawerOpen(true)}\n      onClose={() => setDrawerOpen(false)}\n      renderDrawerContent={() => <MainDrawer />}\n      swipeEnabled={false}\n      drawerStyle={styles.drawer}\n    >\n      <Tab.Navigator\n        id=\"HomeTabs\"\n        screenOptions={{\n          header: (props) => (\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            <HeaderTab onPressMenu={() => setDrawerOpen(!drawerOpen)} {...props} />\n          ),\n          lazy: Platform.select({\n            native: false,\n            web: true,\n          }),\n        }}\n        tabBar={({ navigation, state, descriptors, insets }) => (\n          <BottomNavigation.Bar\n            navigationState={state}\n            safeAreaInsets={insets}\n            onTabPress={({ route, preventDefault }) => {\n              const event = navigation.emit({\n                type: 'tabPress',\n                target: route.key,\n                canPreventDefault: true,\n              })\n\n              if (event.defaultPrevented) {\n                preventDefault()\n              } else {\n                navigation.dispatch({\n                  ...CommonActions.navigate(route.name, route.params),\n                  target: state.key,\n                })\n              }\n            }}\n            renderIcon={({ route, focused, color }) => {\n              const { options } = descriptors[route.key]\n              if (options.tabBarIcon) {\n                return options.tabBarIcon({ focused, color, size: 24 })\n              }\n\n              return null\n            }}\n            getLabelText={({ route }) => {\n              const { options } = descriptors[route.key]\n              const label =\n                typeof options.tabBarLabel === 'string'\n                  ? options.tabBarLabel\n                  : options.title ?? route.name\n              return label\n            }}\n          />\n        )}\n      >\n        <Tab.Screen\n          name=\"Catalogues\"\n          component={CataloguesScreen}\n          initialParams={initialParams}\n          options={{\n            tabBarLabel: Copies.catalogues,\n            tabBarIcon: ({ color, size }) => {\n              return <Icon source=\"newspaper-variant-multiple\" size={size} color={color} />\n            },\n            title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.catalogues_near_you}`,\n          }}\n        />\n        <Tab.Screen\n          name=\"Stores\"\n          component={StoresScreen}\n          initialParams={initialParams}\n          options={{\n            tabBarLabel: Copies.stores,\n            tabBarIcon: ({ color, size }) => {\n              return <Icon source=\"store\" size={size} color={color} />\n            },\n            headerShown: Platform.select({\n              web: true,\n              native: false,\n            }),\n            title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.stores_near_you}`,\n          }}\n        />\n        <Tab.Screen\n          name=\"ForYou\"\n          component={ForYouScreen}\n          initialParams={{ countryCode }}\n          options={{\n            tabBarLabel: Copies.for_you,\n            tabBarIcon: ({ color, size }) => {\n              return <Icon source=\"star\" size={size} color={color} />\n            },\n            headerShown: Platform.select({\n              web: true,\n              native: false,\n            }),\n            title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.for_you}`,\n          }}\n        />\n      </Tab.Navigator>\n    </Drawer>\n  )\n}\n\nexport default HomeTabs\n","import { createStackNavigator } from '@react-navigation/stack'\nimport { useMemo } from 'react'\nimport { Platform } from 'react-native'\n\nimport HomeTabs from './HomeTabs'\nimport type { RootStackParamList } from './types'\nimport Header from '../components/Header'\nimport { Copies } from '../constants'\nimport { useAppSelector } from '../redux'\nimport {\n  CatalogueDetailScreen,\n  ContactsScreen,\n  GeoScreen,\n  NotFoundScreen,\n  OnBoardingScreen,\n  PrivacyPolicyScreen,\n  StoreDetailScreen,\n} from '../screens'\n\nconst Stack = createStackNavigator<RootStackParamList>()\n\nexport const RootStack = () => {\n  const { countryCode, citySlug } = useAppSelector((state) => state.app)\n  const onboard = useAppSelector((state) => state.user.onboard)\n\n  // TODO: avoid ternary when bug will be fixed:\n  // - https://github.com/react-navigation/react-navigation/issues/8671\n  // - https://github.com/react-navigation/react-navigation/issues/7909\n  const initialParams = useMemo(\n    () => (citySlug ? { countryCode, citySlug } : { countryCode }),\n    [citySlug, countryCode],\n  )\n\n  return (\n    <Stack.Navigator\n      id=\"RootStack\"\n      screenOptions={{\n        headerMode: 'screen',\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        header: (props) => <Header {...props} />,\n      }}\n      initialRouteName={Platform.select({\n        native: onboard ? 'HomeTabs' : 'Onboarding',\n        web: 'HomeTabs',\n      })}\n    >\n      <Stack.Screen name=\"Onboarding\" component={OnBoardingScreen} initialParams={initialParams} />\n      <Stack.Screen name=\"HomeTabs\" component={HomeTabs} options={{ headerShown: false }} />\n      <Stack.Screen name=\"CatalogueDetail\" component={CatalogueDetailScreen} />\n      <Stack.Screen name=\"StoreDetail\" component={StoreDetailScreen} />\n      <Stack.Screen\n        name=\"Geo\"\n        component={GeoScreen}\n        options={{ title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.change_location}` }}\n      />\n      <Stack.Screen\n        name=\"Contacts\"\n        component={ContactsScreen}\n        options={{ title: `${process.env.EXPO_PUBLIC_APP_NAME} - ${Copies.contacts}` }}\n      />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} />\n      <Stack.Screen name=\"PrivacyPolicy\" component={PrivacyPolicyScreen} />\n    </Stack.Navigator>\n  )\n}\n\nexport default RootStack\n","import { StatusBar } from 'expo-status-bar'\nimport { useEffect, useState } from 'react'\nimport { AppState } from 'react-native'\nimport { PaperProvider, Snackbar } from 'react-native-paper'\n\nimport { useIpapiJsonQuery } from './api'\nimport { NavigationProvider, RootStack } from './navigation'\nimport {\n  loadAndShowConsentFormIfRequired,\n  setAppStatus,\n  setDefaultLocation,\n  setLocation,\n  setStoredConsentAndChoices,\n  useAppDispatch,\n  useAppSelector,\n} from './redux'\nimport { storage, storageKeys, DarkTheme, LightTheme } from './utils'\n\nconst AppContainer = () => {\n  const dispatch = useAppDispatch()\n  const theme = useAppSelector((state) => state.ui.theme)\n  const { status: appStatus, countryCode } = useAppSelector((state) => state.app)\n  const consent_obtained = useAppSelector((state) => state.consent.consent_obtained)\n  const { location, onboard } = useAppSelector((state) => state.user)\n  const [consentCheck, setConsentCheck] = useState(false)\n  const storedLocation = storage.getString(storageKeys.location)\n  const {\n    data: ipLocation,\n    isError,\n    error,\n  } = useIpapiJsonQuery({}, { skip: !!storedLocation || !!location })\n  const [snackVisible, setSnackVisible] = useState(false)\n\n  useEffect(() => {\n    if (error && __DEV__) {\n      setSnackVisible(true)\n    }\n  }, [error])\n\n  useEffect(() => {\n    if (isError) {\n      return void dispatch(setDefaultLocation())\n    }\n\n    if (!ipLocation) {\n      return\n    }\n\n    const { latitude, longitude, city, region, country_code: ipCountryCode } = ipLocation\n\n    if (countryCode !== ipCountryCode.toLowerCase()) {\n      return void dispatch(setDefaultLocation())\n    }\n\n    if (latitude && longitude) {\n      void dispatch(\n        setLocation({\n          latitude,\n          longitude,\n          display: city ?? region,\n        }),\n      )\n    }\n  }, [countryCode, dispatch, ipLocation, isError])\n\n  useEffect(() => {\n    const initConsent = async () => {\n      await dispatch(setStoredConsentAndChoices())\n    }\n    void initConsent().then(() => {\n      setConsentCheck(true)\n    })\n  }, [dispatch])\n\n  useEffect(() => {\n    const showConsentForm = async () => {\n      await dispatch(loadAndShowConsentFormIfRequired())\n    }\n    if (consentCheck && !consent_obtained && onboard) {\n      void showConsentForm()\n    }\n  }, [consentCheck, consent_obtained, dispatch, onboard])\n\n  useEffect(() => {\n    const appStatusSubscription = AppState.addEventListener('change', (nextAppState) => {\n      dispatch(setAppStatus(nextAppState))\n    })\n    return () => {\n      appStatusSubscription.remove()\n    }\n  }, [appStatus, dispatch])\n\n  return (\n    <PaperProvider theme={theme === 'dark' ? DarkTheme : LightTheme}>\n      <StatusBar style={theme === 'dark' ? 'light' : 'dark'} />\n      <NavigationProvider theme={theme === 'dark' ? DarkTheme : LightTheme}>\n        <RootStack />\n      </NavigationProvider>\n      <Snackbar onDismiss={() => setSnackVisible(false)} visible={snackVisible}>\n        {JSON.stringify(error)}\n      </Snackbar>\n    </PaperProvider>\n  )\n}\n\nexport default AppContainer\n","import * as SplashScreen from 'expo-splash-screen'\nimport { useCallback } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { GestureHandlerRootView } from 'react-native-gesture-handler'\nimport { Provider as ReduxProvider } from 'react-redux'\n\nimport AppContainer from './src/AppContainer'\nimport ErrorFallback from './src/components/ErrorFallback'\nimport { store } from './src/redux'\n\nvoid SplashScreen.preventAutoHideAsync()\n\nconst App = () => {\n  const handleOnLayout = useCallback(async () => {\n    await SplashScreen.hideAsync()\n  }, [])\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <ReduxProvider store={store}>\n        <GestureHandlerRootView onLayout={handleOnLayout} style={{ flex: 1 }}>\n          <AppContainer />\n        </GestureHandlerRootView>\n      </ReduxProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"232c83e5\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [473], () => (__webpack_require__(15530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["capitalizeString","inputString","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","cleanString","string","replace","trim","formatDistanceNumber","distance","toString","length","Math","round","Breakpoints","name","value","Routes","it","Stores","StoreDetail","ForYou","CatalogueDetail","Geo","Contacts","fr","Copies","DefaultLocations","latitude","longitude","display","boundingBox","ExtraColors","FiltersDefault","parseInt","retailer_ids","c","_c$date_end","expirationLabel","date_end","urgencyLevel","date_start","_getDateInfo","unformatted_date_start","unformatted_date_end","ends_on","ends_in","expired","expires_today","starts_in","today","Date","parse","addHours","addMinutes","addSeconds","dateInfo","daysDiffFromStart","differenceInDays","distanceFromStart","formatDistanceToNowStrict","locale","daysDiffFromEnd","distanceFromEnd","_expiration_label","_expiration_urgency_level","format","getDateInfo","_objectSpread","title","_retailer_name","retailers","_retailer_id","id","_retailer_slug","slug","_distance","dist_meters","formatOpeningHours","opening_hours","Array","isArray","periods","input","getISODay","currentTime","entry","close","open","isOpen","currentDate","dayName","getFullYear","getMonth","getDate","day","getDay","timeFrom","time","timeTo","isToday","dayNumber","from","to","reduce","acc","_existingDayEntry$tim","existingDayEntry","find","item","push","apply","_toConsumableArray","sort","a","b","formatPeriods","s","city","address","retailer_name","catalogues","enrichCatalogue","undefined","_isOpen","some","supabaseUrl","supabaseAnonKey","Error","createClient","catalogueFields","storeFields","supabaseApi","createApi","reducerPath","baseQuery","fakeBaseQuery","endpoints","builder","getNearbyCataloguesByRetailerIdsWithAds","query","queryFn","_queryFn","_asyncToGenerator","_ref","supabaseClient","rpc","lat","long","in","_yield$query$select$l","select","limit","data","error","catalogue","index","enrichedCatalogue","_hasAdNext","_x","arguments","getCataloguesByIds","_queryFn2","ids","_yield$supabaseClient","_x2","getStoresByIds","_queryFn3","_yield$supabaseClient2","enrichedData","store","enrichStore","_x3","getStoreByIdWithCatalogues","_queryFn4","_yield$supabaseClient3","eq","_x4","getNearbyStoresAndRetailersWithAds","_queryFn5","_ref2","_yield$supabaseClient4","stores","forEach","enrichedStore","retailer_id","retailer_slug","r","_x5","getNearbyStoresByCatalogueId","_queryFn6","_ref3","_yield$supabaseClient5","_x6","getNearbyRetailers","_queryFn7","_ref4","_yield$supabaseClient6","_x7","useGetNearbyCataloguesByRetailerIdsWithAdsQuery","useGetCataloguesByIdsQuery","useGetNearbyStoresByCatalogueIdQuery","useGetNearbyStoresAndRetailersWithAdsQuery","useGetStoresByIdsQuery","useGetStoreByIdWithCataloguesQuery","useGetNearbyRetailersQuery","fakeApi","getCities","countryCode","citiesList","localeCompare","getCityBySlug","citySlug","message","code","nominatimApi","useGetCityBySlugQuery","useGetCitiesQuery","fetchBaseQuery","baseUrl","nomReverse","transformResponse","response","photonApi","useNomReverseQuery","phoReverse","features","phoSearch","_","filter","feature","properties","countrycode","usePhoSearchQuery","usePhoReverseQuery","ipapiApi","ipapiJson","useIpapiJsonQuery","routeName","params","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","initializeAnalytics","firebaseApp","config","send_page_view","logScreenView","path","_ref$params","logGaEvent","page_title","createScreenName","page_path","window","location","pathname","page_location","href","country_code","city_slug","logEvent","restOfParams","_objectWithoutProperties","_excluded","setUserProperties","setGaUserProperties","delay","timeInMilliseconds","Promise","resolve","setTimeout","getLocation","_locationError","DELAY_IN_MS","Platform","OS","tries","locationError","race","getCurrentPositionAsync","accuracy","LocationAccuracy","High","distanceInterval","err","storageKeys","storageId","storage","MMKV","native","MilloomeLightTheme","merge","MD3LightTheme","roundness","colors","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","background","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","MilloomeDarkTheme","MD3DarkTheme","_adaptNavigationTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","AdaptedLightTheme","LightTheme","AdaptedDarkTheme","DarkTheme","useBottomSheetBackHandler","bottomSheetRef","backHandlerSubscriptionRef","useRef","handleSheetPositionChange","useCallback","isBottomSheetVisible","current","BackHandler","addEventListener","_bottomSheetRef$curre","collapse","_backHandlerSubscript","remove","windowWidth","useWindowDimensions","width","breakpoint","bp","array","nextBp","useBreakpointsValue","bpValues","useBreakpoint","useStyles","create","deps","theme","useTheme","useMemo","StyleSheet","concat","initialState","status","NativeAppState","currentState","appSlice","createSlice","reducers","setAppStatus","state","action","payload","setCountryCode","setCitySlug","set","deleteCitySlug","delete","_appSlice$actions","actions","consentSlice","setStoredConsentAndChoices","showPrivacyOptionsForm","loadAndShowConsentFormIfRequired","_consentSlice$actions","catalogueStoreDialog","type","getString","uiSlice","openCatalogueStoreDialog","closeCatalogueStoreDialog","setTheme","_uiSlice$actions","onboard","_storage$getBoolean","getBoolean","storedLocation","JSON","getInitialLocation","favourite_catalogues","storedFavs","getInitialFavCatalogues","favourite_stores","getInitialFavStores","filters","getInitialCataloguesFilters","catalogues_view_count","storedCount","getNumber","getInitialCatalogueViewCount","setDefaultLocation","createAsyncThunk","dispatch","getState","defaultLocation","app","deleteFilters","setLocation","stringify","setCityLocation","setFavouriteCatalogue","_ref5","favs","setFavouriteStore","_ref7","_ref6","setCataloguesViewCount","_ref9","_ref8","count","user","userSlice","_DefaultLocations$act","setOnboard","deleteFavouriteCatalogue","newFavs","fav","deleteFavouriteStore","emptyFavouriteCatalogues","emptyFavouriteStores","setFilters","extraReducers","addCase","fulfilled","_userSlice$actions","configureStore","reducer","_defineProperty","middleware","getDefaultMiddleware","useAppDispatch","useDispatch","useAppSelector","useSelector","NavigationProvider","children","navigationRef","useNavigationContainerRef","routeRef","countryCodeList","useReduxDevToolsExtension","getPath","route","linking","prefixes","Linking","createURL","screens","HomeTabs","Catalogues","pageNumber","Number","NotFound","PrivacyPolicy","handleCitySlug","initiate","then","parseFloat","lng","navigate","screen","catch","handleOnReady","getCurrentRoute","_routeRef$current$par","includes","handleOnStateChange","previousRoute","currentRoute","key","_currentRoute$params","_jsx","NavigationContainer","ref","onReady","onStateChange","styles","image","height","options","left","right","mode","onPressMenu","_useAppSelector","onPress","useLinkProps","_jsxs","Appbar","Header","Action","size","SpacingBase","icon","Content","TouchableOpacity","Image","priority","style","contentFit","alt","source","require","ui","onContactsPress","handleOnSwitchTheme","handleOnConsentForm","Drawer","showDivider","label","retailer","spaceBetween","main","flexDirection","justifyContent","alignItems","retailerContainer","marginRight","backgroundColor","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","maxWidth","color","View","Text","numberOfLines","variant","text","marginLeft","openingProps","Icon","StoreCard","flat","imgSource","onLongPress","cardContentStyle","logoContainer","padding","borderTopLeftRadius","borderBottomLeftRadius","overflow","bgImage","opacity","imageContainer","borderWidth","borderColor","avatar","infoContainer","flex","minHeight","content","marginTop","Card","contentStyle","ImageBackground","imageStyle","Avatar","Title","titleNumberOfLines","subtitleNumberOfLines","subtitle","RetailerDistance","StoreOpening","StoreCardPlaceholder","ActivityIndicator","StoresListItem","memo","handleOnLongPress","retailer_thumb_url","prevProps","nextProps","CataloguesListAd","useEffect","adsbygoogle","className","StoresListAd","StoreDetailAd","ListEmptyComponent","StoresList","contentContainerStyle","vertical","showAds","storesList","storesItem","marginBottom","handleRenderItem","FlatList","keyExtractor","renderItem","horizontal","ItemSeparatorComponent","CatalogueDetailSheet","contentColor","onFavourite","onChangeDirection","isFavourite","isHorizontal","add_to_favoutites","remove_from_favourites","swipe_horizontally","swipe_vertically","storesContainer","listItem","_Fragment","List","titleStyle","BottomSheet","hasBackdrop","snapPoints","handleComponentText","_useState","useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","renderBackdrop","props","BottomSheetBackdrop","appearsOnIndex","disappearsOnIndex","pressBehavior","contentContainer","customHandle","handleOnChange","handleOnHandlePress","_bottomSheetRef$curre2","expand","BottomSheetLib","backgroundStyle","handleHeight","backdropComponent","onChange","handleComponent","Button","textColor","labelStyle","BottomSheetHandle","BottomSheetView","navigation","useNavigation","_useAppSelector2","isCatalogue","isFav","onReadPress","handleOnFavPress","handleOnClose","addListener","Dialog","visible","onDismiss","Divider","Actions","container","gap","textAlign","resetErrorBoundary","SafeAreaProvider","ThemeProvider","SafeAreaView","isCatalogueDetail","isStoreDetail","isGeo","showBack","canGoBack","handleOnPressBack","goBack","BackAction","headerTitle","cover","badge","CatalogueDetailScreen","setCatalogue","_useGetCataloguesById","isLoading","_useGetNearbyStoresBy","skip","_useGetNearbyStoresBy2","storesError","handleOnPressFav","renderHeader","setOptions","header","ErrorBoundary","FallbackComponent","ErrorFallback","thumb_url","A","target","BottomSheetHandleHeight","CatalogueStoreDialog","expiration","expirationProps","CatalogueCard","titleContainer","info","titleVariant","CatalogueExpiration","CatalogueCardPlaceholder","row","items","numColumns","xs","sm","md","lg","xl","xxl","columnWrapperStyle","imgUrl","imgType","Helmet","rel","fetchPriority","as","CataloguesListItem","_item$thumb_url","_item$title","HeadPreloadImg","CataloguesList","CataloguesGrid","ListHeaderComponent","onRefresh","refreshing","onScroll","CataloguesGridPlaceholder","RetailersFilterItem","selected","_ref$compact","compact","_ref$showSelectedChec","showSelectedCheck","Chip","textStyle","itemContainer","RetailersFilter","reset","filteredRetailers","setFilteredRetailers","handleOnRetailerPress","newRetailers","retailerId","handleRenderRetailer","onApply","onDelete","_useWindowDimensions","windowHeight","insets","useSafeAreaInsets","getStepFromDistance","_useState3","_useState4","sliderStep","setSliderStep","_useGetNearbyRetailer","top","distanceContainer","retailersContainer","buttonsContainer","button","retailerChipsContainer","flexWrap","distanceLabel","handleOnSliderChange","renderRetailerItem","handleOnApply","handleOnDismiss","handleOnDelete","Portal","Modal","IconButton","Slider","onValueChange","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","ScrollView","buttonColor","GeoAction","handleOnPress","onChangeText","placeholder","containerStyle","setQuery","handleOnChangeText","search","Searchbar","clearIcon","GeoSearch","onResultPress","inputContainerStyle","_usePhoSearchQuery","_usePhoSearchQuery$da","searchData","handleDisplayText","_properties$name","street","debounce","geometry","coordinates","GeoSearchItem","GeoSearchInput","initialNumToRender","keyboardShouldPersistTaps","GeoLocationButton","onLocationRetrieved","onLocationRetrievedFailed","isLoadingLocation","setIsLoadingLocation","modalVisible","setModalVisible","modalContentContainer","margin","modalHeader","modalContent","modalImage","alignSelf","modalText","modalButton","handleSetLocationDisplay","road","quarter","town","village","firstPart","secondPart","handleOnRetrieveLocationPress","requestForegroundPermissionsAsync","PermissionStatus","GRANTED","coords","handleOnModalButtonPress","openSettings","web","loading","disabled","fab","position","bottom","grid","CataloguesScreen","storedFilters","isFabExtended","setIsFabExtended","hasRetailerFilter","_useGetNearbyCatalogu","_useGetNearbyCatalogu2","cataloguesError","refetch","setRefreshing","_useState5","_useState6","handleOnRefresh","handleOnModalDismiss","handleOnFabPress","handleOnFiltersChange","handleOnFiltersDelete","handleOnScroll","_Math$floor","_nativeEvent$contentO","nativeEvent","currentScrollPosition","floor","contentOffset","y","fabLabel","FAB","AnimatedFAB","extended","animateFrom","iconMode","FiltersModal","emptyTitle","handleOnEmptyPress","listContainer","placehoderStores","placehoderCatalogues","StoresOrPlaceholder","EmptyFavList","CataloguesOrPlaceholder","ForYouScreen","snackbarVisibleStore","setSnackbarVisibleStore","snackbarVisibleCatalogue","setSnackbarVisibleCatalogue","checkDeleteStore","setCheckDeleteStore","_useState7","_useState8","checkDeleteCatalogue","setCheckDeleteCatalogue","_useGetCataloguesById2","isLoadingCatalogues","isSuccessCatalogues","isSuccess","_useGetStoresByIdsQue","_useGetStoresByIdsQue2","isLoadingStores","isSuccessStores","favStore","favCatalogue","Snackbar","divider","GeoScreen","snackbarVisible","setSnackbarVisible","handleOnFailed","handleOnResult","NotFoundScreen","OnBoardingScreen","hours","hour","fontWeight","Fragment","StoreStaticMap","StoreDetailScreen","_store$metadata","setStore","_useGetStoreByIdWithC","loaderContainer","mapContainer","borderBottomWidth","directionsButton","logo","detailsContainer","opening","hoursContainer","cataloguesContainer","emptyContainer","descriptionContainer","createOpenLink","queryPlaceId","metadata","google_place_id","OpeningHours","Surface","description","StoresMap","StoresScreen","_coords$latitude","_coords$longitude","layout","setCoords","setIndex","routes","_useGetNearbyStoresAn","_useGetNearbyStoresAn2","isFetching","filteredStores","setFilteredStores","tabBar","tabBarIndicator","handleOnSearchRequest","handleRenderScene","initialCoords","onSearchRequest","newStores","handleRenderTabBar","TabBar","indicatorStyle","activeColor","inactiveColor","TabView","navigationState","renderScene","onIndexChange","initialLayout","renderTabBar","lazy","ContactsScreen","src","PrivacyPolicyScreen","Tab","createBottomTabNavigator","drawerOpen","setDrawerOpen","drawer","initialParams","onOpen","onClose","renderDrawerContent","MainDrawer","swipeEnabled","drawerStyle","Navigator","screenOptions","HeaderTab","descriptors","BottomNavigation","Bar","safeAreaInsets","onTabPress","preventDefault","emit","canPreventDefault","defaultPrevented","CommonActions","renderIcon","focused","tabBarIcon","getLabelText","_options$title","tabBarLabel","Screen","component","headerShown","Stack","createStackNavigator","RootStack","headerMode","initialRouteName","appStatus","consent_obtained","consent","consentCheck","setConsentCheck","_useIpapiJsonQuery","ipLocation","isError","snackVisible","setSnackVisible","region","ipCountryCode","initConsent","showConsentForm","appStatusSubscription","AppState","nextAppState","PaperProvider","StatusBar","SplashScreen","handleOnLayout","ReduxProvider","GestureHandlerRootView","onLayout","AppContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","i","j","Object","keys","every","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","f","e","chunkId","all","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}